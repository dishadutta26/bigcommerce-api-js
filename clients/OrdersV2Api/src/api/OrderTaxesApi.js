/**
 * Orders V2
 * `/orders`endpoints integrate with point-of-sale, shipping, distribution, and inventory-management systems.  ## Order The Order object contains a record of the purchase agreement between a shopper and a merchant. To learn more about creating orders, see [Orders API Guide](/api-docs/orders/orders-api-overview).  ### Currency Fields  * `currency_code` - the display currency used to present prices to the shopper on the storefront. * `currency_exchange_rate`: the exchange rate between the store's default currency and the display currency; when the order is created by means of the V2 endpoints, this value is always 1 (only in the storefront this value can be different to 1).  The following additional fields are returned on orders when Multi-Currency is enabled on the store:  * `store_default_currency_code` - the store's default currency * `store_default_to_transactional_exchange_rate` - the exchange rate between the store's default currency and the transactional currency used in the order.  **Example:**  ```json {   //...   \"currency_id\": 4,   \"currency_code\": \"EUR\",   \"currency_exchange_rate\": 1,   \"default_currency_id\": 4,   \"default_currency_code\": \"EUR\",   \"store_default_currency_code: \"USD\",   \"store_default_to_transactional_exchange_rate\": \"100.0000000000\"   //... }  ```  ## Order Coupons Coupon code applied to an order.  ## Order Messages Messages associated with an order.  ## Order Products Product line items belonging to an order.  ## Order Shipping Addresses Customer shipping address belonging to an order.  ## Order Statuses Each order status represents a state in the order-fulfillment workflow.  ## Order Taxes Each tax applied to an order. This information can be useful for reporting purposes. All values are read-only.  ## Order Shipments Tracks a package consignment from an order that is shipped from the seller to the buyer.  ## Order Shipping Addresses Quotes Read Only. Gets all shipping quotes from an order.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import OrderTaxesBase1 from '../model/OrderTaxesBase1';

/**
* OrderTaxes service.
* @module api/OrderTaxesApi
* @version 2.0
*/
export default class OrderTaxesApi {

    /**
    * Constructs a new OrderTaxesApi. 
    * @alias module:api/OrderTaxesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getOrderTaxes operation.
     * @callback module:api/OrderTaxesApi~getOrderTaxesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/OrderTaxesBase1>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All Order Taxes
     * Gets all order taxes using &#x60;order_id&#x60;.  Each tax applied to an order. This information can be useful for reporting purposes. Pass in the query parameter &#x60;?details&#x3D;true&#x60; to return extra details about order taxes. &#x60;order_product_id&#x60; and &#x60;line_item_type&#x60; are also returned.  All values are read-only.
     * @param {Object} opts Optional parameters
     * @param {module:api/OrderTaxesApi~getOrderTaxesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/OrderTaxesBase1>}
     */
    getOrderTaxes(orderId, accept, contentType, opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'order_id': orderId
      };
      let queryParams = {
        'page': opts['page'],
        'limit': opts['limit'],
        'details': opts['details']
      };
      let headerParams = {
        'Accept': accept,
        'Content-Type': contentType
      };
      let formParams = {
      };

      let authNames = ['X-Auth-Client', 'X-Auth-Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [OrderTaxesBase1];

      return this.apiClient.callApi(
        '/orders/{order_id}/taxes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}
