/**
 * Orders V2
 * `/orders`endpoints integrate with point-of-sale, shipping, distribution, and inventory-management systems.  ## Order The Order object contains a record of the purchase agreement between a shopper and a merchant. To learn more about creating orders, see [Orders API Guide](/api-docs/orders/orders-api-overview).  ### Currency Fields  * `currency_code` - the display currency used to present prices to the shopper on the storefront. * `currency_exchange_rate`: the exchange rate between the store's default currency and the display currency; when the order is created by means of the V2 endpoints, this value is always 1 (only in the storefront this value can be different to 1).  The following additional fields are returned on orders when Multi-Currency is enabled on the store:  * `store_default_currency_code` - the store's default currency * `store_default_to_transactional_exchange_rate` - the exchange rate between the store's default currency and the transactional currency used in the order.  **Example:**  ```json {   //...   \"currency_id\": 4,   \"currency_code\": \"EUR\",   \"currency_exchange_rate\": 1,   \"default_currency_id\": 4,   \"default_currency_code\": \"EUR\",   \"store_default_currency_code: \"USD\",   \"store_default_to_transactional_exchange_rate\": \"100.0000000000\"   //... }  ```  ## Order Coupons Coupon code applied to an order.  ## Order Messages Messages associated with an order.  ## Order Products Product line items belonging to an order.  ## Order Shipping Addresses Customer shipping address belonging to an order.  ## Order Statuses Each order status represents a state in the order-fulfillment workflow.  ## Order Taxes Each tax applied to an order. This information can be useful for reporting purposes. All values are read-only.  ## Order Shipments Tracks a package consignment from an order that is shipped from the seller to the buyer.  ## Order Shipping Addresses Quotes Read Only. Gets all shipping quotes from an order.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CouponsResource1 from './CouponsResource1';
import ProductsResource1 from './ProductsResource1';
import ShippingAddressResource from './ShippingAddressResource';

/**
* The OrderFull1 model module.
* @module model/OrderFull1
* @version 2.0
*/
export default class OrderFull1 {
    /**
    * Constructs a new <code>OrderFull1</code>.
    * @alias module:model/OrderFull1
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>OrderFull1</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/OrderFull1} obj Optional instance to populate.
    * @return {module:model/OrderFull1} The populated <code>OrderFull1</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderFull1();
                        
            
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('customer_id')) {
                obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'Number');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'String');
            }
            if (data.hasOwnProperty('date_modified')) {
                obj['date_modified'] = ApiClient.convertToType(data['date_modified'], 'String');
            }
            if (data.hasOwnProperty('date_shipped')) {
                obj['date_shipped'] = ApiClient.convertToType(data['date_shipped'], 'String');
            }
            if (data.hasOwnProperty('status_id')) {
                obj['status_id'] = ApiClient.convertToType(data['status_id'], 'Number');
            }
            if (data.hasOwnProperty('cart_id')) {
                obj['cart_id'] = ApiClient.convertToType(data['cart_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('custom_status')) {
                obj['custom_status'] = ApiClient.convertToType(data['custom_status'], 'String');
            }
            if (data.hasOwnProperty('subtotal_ex_tax')) {
                obj['subtotal_ex_tax'] = ApiClient.convertToType(data['subtotal_ex_tax'], 'String');
            }
            if (data.hasOwnProperty('subtotal_inc_tax')) {
                obj['subtotal_inc_tax'] = ApiClient.convertToType(data['subtotal_inc_tax'], 'String');
            }
            if (data.hasOwnProperty('subtotal_tax')) {
                obj['subtotal_tax'] = ApiClient.convertToType(data['subtotal_tax'], 'String');
            }
            if (data.hasOwnProperty('base_shipping_cost')) {
                obj['base_shipping_cost'] = ApiClient.convertToType(data['base_shipping_cost'], 'String');
            }
            if (data.hasOwnProperty('shipping_cost_ex_tax')) {
                obj['shipping_cost_ex_tax'] = ApiClient.convertToType(data['shipping_cost_ex_tax'], 'String');
            }
            if (data.hasOwnProperty('shipping_cost_inc_tax')) {
                obj['shipping_cost_inc_tax'] = ApiClient.convertToType(data['shipping_cost_inc_tax'], 'String');
            }
            if (data.hasOwnProperty('shipping_cost_tax')) {
                obj['shipping_cost_tax'] = ApiClient.convertToType(data['shipping_cost_tax'], 'String');
            }
            if (data.hasOwnProperty('shipping_cost_tax_class_id')) {
                obj['shipping_cost_tax_class_id'] = ApiClient.convertToType(data['shipping_cost_tax_class_id'], 'Number');
            }
            if (data.hasOwnProperty('base_handling_cost')) {
                obj['base_handling_cost'] = ApiClient.convertToType(data['base_handling_cost'], 'String');
            }
            if (data.hasOwnProperty('handling_cost_ex_tax')) {
                obj['handling_cost_ex_tax'] = ApiClient.convertToType(data['handling_cost_ex_tax'], 'String');
            }
            if (data.hasOwnProperty('handling_cost_inc_tax')) {
                obj['handling_cost_inc_tax'] = ApiClient.convertToType(data['handling_cost_inc_tax'], 'String');
            }
            if (data.hasOwnProperty('handling_cost_tax')) {
                obj['handling_cost_tax'] = ApiClient.convertToType(data['handling_cost_tax'], 'String');
            }
            if (data.hasOwnProperty('handling_cost_tax_class_id')) {
                obj['handling_cost_tax_class_id'] = ApiClient.convertToType(data['handling_cost_tax_class_id'], 'Number');
            }
            if (data.hasOwnProperty('base_wrapping_cost')) {
                obj['base_wrapping_cost'] = ApiClient.convertToType(data['base_wrapping_cost'], 'String');
            }
            if (data.hasOwnProperty('wrapping_cost_ex_tax')) {
                obj['wrapping_cost_ex_tax'] = ApiClient.convertToType(data['wrapping_cost_ex_tax'], 'String');
            }
            if (data.hasOwnProperty('wrapping_cost_inc_tax')) {
                obj['wrapping_cost_inc_tax'] = ApiClient.convertToType(data['wrapping_cost_inc_tax'], 'String');
            }
            if (data.hasOwnProperty('wrapping_cost_tax')) {
                obj['wrapping_cost_tax'] = ApiClient.convertToType(data['wrapping_cost_tax'], 'String');
            }
            if (data.hasOwnProperty('wrapping_cost_tax_class_id')) {
                obj['wrapping_cost_tax_class_id'] = ApiClient.convertToType(data['wrapping_cost_tax_class_id'], 'Number');
            }
            if (data.hasOwnProperty('total_ex_tax')) {
                obj['total_ex_tax'] = ApiClient.convertToType(data['total_ex_tax'], 'String');
            }
            if (data.hasOwnProperty('total_inc_tax')) {
                obj['total_inc_tax'] = ApiClient.convertToType(data['total_inc_tax'], 'String');
            }
            if (data.hasOwnProperty('total_tax')) {
                obj['total_tax'] = ApiClient.convertToType(data['total_tax'], 'String');
            }
            if (data.hasOwnProperty('items_total')) {
                obj['items_total'] = ApiClient.convertToType(data['items_total'], 'Number');
            }
            if (data.hasOwnProperty('items_shipped')) {
                obj['items_shipped'] = ApiClient.convertToType(data['items_shipped'], 'Number');
            }
            if (data.hasOwnProperty('payment_method')) {
                obj['payment_method'] = ApiClient.convertToType(data['payment_method'], 'String');
            }
            if (data.hasOwnProperty('payment_provider_id')) {
                obj['payment_provider_id'] = ApiClient.convertToType(data['payment_provider_id'], 'String');
            }
            if (data.hasOwnProperty('payment_status')) {
                obj['payment_status'] = ApiClient.convertToType(data['payment_status'], 'String');
            }
            if (data.hasOwnProperty('refunded_amount')) {
                obj['refunded_amount'] = ApiClient.convertToType(data['refunded_amount'], 'String');
            }
            if (data.hasOwnProperty('order_is_digital')) {
                obj['order_is_digital'] = ApiClient.convertToType(data['order_is_digital'], 'Boolean');
            }
            if (data.hasOwnProperty('store_credit_amount')) {
                obj['store_credit_amount'] = ApiClient.convertToType(data['store_credit_amount'], 'String');
            }
            if (data.hasOwnProperty('gift_certificate_amount')) {
                obj['gift_certificate_amount'] = ApiClient.convertToType(data['gift_certificate_amount'], 'String');
            }
            if (data.hasOwnProperty('ip_address')) {
                obj['ip_address'] = ApiClient.convertToType(data['ip_address'], 'String');
            }
            if (data.hasOwnProperty('geoip_country')) {
                obj['geoip_country'] = ApiClient.convertToType(data['geoip_country'], 'String');
            }
            if (data.hasOwnProperty('geoip_country_iso2')) {
                obj['geoip_country_iso2'] = ApiClient.convertToType(data['geoip_country_iso2'], 'String');
            }
            if (data.hasOwnProperty('currency_id')) {
                obj['currency_id'] = ApiClient.convertToType(data['currency_id'], 'Number');
            }
            if (data.hasOwnProperty('currency_code')) {
                obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
            }
            if (data.hasOwnProperty('currency_exchange_rate')) {
                obj['currency_exchange_rate'] = ApiClient.convertToType(data['currency_exchange_rate'], 'String');
            }
            if (data.hasOwnProperty('default_currency_id')) {
                obj['default_currency_id'] = ApiClient.convertToType(data['default_currency_id'], 'Number');
            }
            if (data.hasOwnProperty('default_currency_code')) {
                obj['default_currency_code'] = ApiClient.convertToType(data['default_currency_code'], 'String');
            }
            if (data.hasOwnProperty('staff_notes')) {
                obj['staff_notes'] = ApiClient.convertToType(data['staff_notes'], 'String');
            }
            if (data.hasOwnProperty('customer_message')) {
                obj['customer_message'] = ApiClient.convertToType(data['customer_message'], 'String');
            }
            if (data.hasOwnProperty('discount_amount')) {
                obj['discount_amount'] = ApiClient.convertToType(data['discount_amount'], 'String');
            }
            if (data.hasOwnProperty('coupon_discount')) {
                obj['coupon_discount'] = ApiClient.convertToType(data['coupon_discount'], 'String');
            }
            if (data.hasOwnProperty('shipping_address_count')) {
                obj['shipping_address_count'] = ApiClient.convertToType(data['shipping_address_count'], 'Number');
            }
            if (data.hasOwnProperty('is_deleted')) {
                obj['is_deleted'] = ApiClient.convertToType(data['is_deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('is_email_opt_in')) {
                obj['is_email_opt_in'] = ApiClient.convertToType(data['is_email_opt_in'], 'Boolean');
            }
            if (data.hasOwnProperty('credit_card_type')) {
                obj['credit_card_type'] = ApiClient.convertToType(data['credit_card_type'], 'Number');
            }
            if (data.hasOwnProperty('ebay_order_id')) {
                obj['ebay_order_id'] = ApiClient.convertToType(data['ebay_order_id'], 'String');
            }
            if (data.hasOwnProperty('billing_address')) {
                obj['billing_address'] = ApiClient.convertToType(data['billing_address'], Object);
            }
            if (data.hasOwnProperty('order_source')) {
                obj['order_source'] = ApiClient.convertToType(data['order_source'], 'String');
            }
            if (data.hasOwnProperty('external_source')) {
                obj['external_source'] = ApiClient.convertToType(data['external_source'], 'String');
            }
            if (data.hasOwnProperty('products')) {
                obj['products'] = ProductsResource1.constructFromObject(data['products']);
            }
            if (data.hasOwnProperty('shipping_addresses')) {
                obj['shipping_addresses'] = ShippingAddressResource.constructFromObject(data['shipping_addresses']);
            }
            if (data.hasOwnProperty('coupons')) {
                obj['coupons'] = CouponsResource1.constructFromObject(data['coupons']);
            }
            if (data.hasOwnProperty('external_id')) {
                obj['external_id'] = ApiClient.convertToType(data['external_id'], 'String');
            }
            if (data.hasOwnProperty('external_merchant_id')) {
                obj['external_merchant_id'] = ApiClient.convertToType(data['external_merchant_id'], 'String');
            }
            if (data.hasOwnProperty('channel_id')) {
                obj['channel_id'] = ApiClient.convertToType(data['channel_id'], 'Number');
            }
            if (data.hasOwnProperty('tax_provider_id')) {
                obj['tax_provider_id'] = ApiClient.convertToType(data['tax_provider_id'], 'String');
            }
        }
        return obj;
    }

    /**
    * The ID of the order, a read-only value. Do not pass in PUT or POST.
    * @member {Number} id
    */
    'id' = undefined;
    /**
    * The ID of the customer placing the order; or 0 if it was a guest order.
    * @member {Number} customer_id
    */
    'customer_id' = undefined;
    /**
    * The date this order was created. If not specified, will default to the current time. The date should be in RFC 2822 format.
    * @member {String} date_created
    */
    'date_created' = undefined;
    /**
    * A read-only value representing the last modification of the order. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822
    * @member {String} date_modified
    */
    'date_modified' = undefined;
    /**
    * A read-only value representing the date of shipment. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822
    * @member {String} date_shipped
    */
    'date_shipped' = undefined;
    /**
    * The status ID of the order.
    * @member {Number} status_id
    */
    'status_id' = undefined;
    /**
    * The cart ID from which this order originated, if applicable. Correlates with the Cart API. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
    * @member {String} cart_id
    */
    'cart_id' = undefined;
    /**
    * The status will include one of the (string, optiona) - values defined under Order Statuses. This value is read-only. Do not attempt to modify or set this value in a POST or PUT operation.
    * @member {String} status
    */
    'status' = undefined;
    /**
    * Contains the same (string, optiona) - value as the Order Statuses object's `custom_label` property.
    * @member {String} custom_status
    */
    'custom_status' = undefined;
    /**
    * Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)
    * @member {String} subtotal_ex_tax
    */
    'subtotal_ex_tax' = undefined;
    /**
    * Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)
    * @member {String} subtotal_inc_tax
    */
    'subtotal_inc_tax' = undefined;
    /**
    * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)
    * @member {String} subtotal_tax
    */
    'subtotal_tax' = undefined;
    /**
    * The value of the base shipping cost. (Float, Float-As-String, Integer)
    * @member {String} base_shipping_cost
    */
    'base_shipping_cost' = undefined;
    /**
    * The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)
    * @member {String} shipping_cost_ex_tax
    */
    'shipping_cost_ex_tax' = undefined;
    /**
    * The value of shipping cost, including tax. (Float, Float-As-String, Integer)
    * @member {String} shipping_cost_inc_tax
    */
    'shipping_cost_inc_tax' = undefined;
    /**
    * A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)
    * @member {String} shipping_cost_tax
    */
    'shipping_cost_tax' = undefined;
    /**
    * Shipping-cost tax class. A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)
    * @member {Number} shipping_cost_tax_class_id
    */
    'shipping_cost_tax_class_id' = undefined;
    /**
    * The value of the base handling cost. (Float, Float-As-String, Integer)
    * @member {String} base_handling_cost
    */
    'base_handling_cost' = undefined;
    /**
    * The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)
    * @member {String} handling_cost_ex_tax
    */
    'handling_cost_ex_tax' = undefined;
    /**
    * The value of the handling cost, including tax. (Float, Float-As-String, Integer)
    * @member {String} handling_cost_inc_tax
    */
    'handling_cost_inc_tax' = undefined;
    /**
    * A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)
    * @member {String} handling_cost_tax
    */
    'handling_cost_tax' = undefined;
    /**
    * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)
    * @member {Number} handling_cost_tax_class_id
    */
    'handling_cost_tax_class_id' = undefined;
    /**
    * The value of the base wrapping cost. (Float, Float-As-String, Integer)
    * @member {String} base_wrapping_cost
    */
    'base_wrapping_cost' = undefined;
    /**
    * The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)
    * @member {String} wrapping_cost_ex_tax
    */
    'wrapping_cost_ex_tax' = undefined;
    /**
    * The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)
    * @member {String} wrapping_cost_inc_tax
    */
    'wrapping_cost_inc_tax' = undefined;
    /**
    * A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)
    * @member {String} wrapping_cost_tax
    */
    'wrapping_cost_tax' = undefined;
    /**
    * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)
    * @member {Number} wrapping_cost_tax_class_id
    */
    'wrapping_cost_tax_class_id' = undefined;
    /**
    * Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)
    * @member {String} total_ex_tax
    */
    'total_ex_tax' = undefined;
    /**
    * Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer)
    * @member {String} total_inc_tax
    */
    'total_inc_tax' = undefined;
    /**
    * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)
    * @member {String} total_tax
    */
    'total_tax' = undefined;
    /**
    * The total number of items in the order.
    * @member {Number} items_total
    */
    'items_total' = undefined;
    /**
    * The number of items that have been shipped.
    * @member {Number} items_shipped
    */
    'items_shipped' = undefined;
    /**
    * The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.
    * @member {String} payment_method
    */
    'payment_method' = undefined;
    /**
    * The external Transaction ID/Payment ID within this order's payment provider (if a payment provider was used).
    * @member {String} payment_provider_id
    */
    'payment_provider_id' = undefined;
    /**
    * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation.
    * @member {String} payment_status
    */
    'payment_status' = undefined;
    /**
    * The amount refunded from this transaction. (Float, Float-As-String, Integer)
    * @member {String} refunded_amount
    */
    'refunded_amount' = undefined;
    /**
    * Whether this is an order for digital products.
    * @member {Boolean} order_is_digital
    */
    'order_is_digital' = undefined;
    /**
    * Represents the store credit that the shopper has redeemed on this individual order. This is a read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)
    * @member {String} store_credit_amount
    */
    'store_credit_amount' = undefined;
    /**
    * A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)
    * @member {String} gift_certificate_amount
    */
    'gift_certificate_amount' = undefined;
    /**
    * IP Address of the customer, if known.
    * @member {String} ip_address
    */
    'ip_address' = undefined;
    /**
    * The full name of the country where the customer made the purchase, based on the IP.
    * @member {String} geoip_country
    */
    'geoip_country' = undefined;
    /**
    * The country where the customer made the purchase, in ISO2 format, based on the IP.
    * @member {String} geoip_country_iso2
    */
    'geoip_country_iso2' = undefined;
    /**
    * The ID of the currency being used in this transaction. A read-only value. Do not pass in a POST or PUT.
    * @member {Number} currency_id
    */
    'currency_id' = undefined;
    /**
    * The currency code of the currency being used in this transaction. A read-only value. Do not pass in a POST or PUT.
    * @member {String} currency_code
    */
    'currency_code' = undefined;
    /**
    * A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)
    * @member {String} currency_exchange_rate
    */
    'currency_exchange_rate' = undefined;
    /**
    * A read-only value. Do not pass in a POST or PUT.
    * @member {Number} default_currency_id
    */
    'default_currency_id' = undefined;
    /**
    * The currency code of the default currency for this type of transaction. A read-only value. Do not pass in a POST or PUT.
    * @member {String} default_currency_code
    */
    'default_currency_code' = undefined;
    /**
    * Any additional notes for staff.
    * @member {String} staff_notes
    */
    'staff_notes' = undefined;
    /**
    * Message that the customer entered (number, optiona) -o the `Order Comments` box during checkout.
    * @member {String} customer_message
    */
    'customer_message' = undefined;
    /**
    * Amount of discount for this transaction. (Float, Float-As-String, Integer)
    * @member {String} discount_amount
    */
    'discount_amount' = undefined;
    /**
    * A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)
    * @member {String} coupon_discount
    */
    'coupon_discount' = undefined;
    /**
    * The number of shipping addresses associated with this transaction. A read-only value. Do not pass in a POST or PUT.
    * @member {Number} shipping_address_count
    */
    'shipping_address_count' = undefined;
    /**
    * Indicates whether the order was deleted (archived). Set to to true, to archive an order.
    * @member {Boolean} is_deleted
    */
    'is_deleted' = undefined;
    /**
    * Indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT.
    * @member {Boolean} is_email_opt_in
    */
    'is_email_opt_in' = undefined;
    /**
    * Credit card type
    * @member {Number} credit_card_type
    */
    'credit_card_type' = undefined;
    /**
    * If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.
    * @member {String} ebay_order_id
    */
    'ebay_order_id' = undefined;
    /**
    * Required to create an order.
    * @member {Object} billing_address
    */
    'billing_address' = undefined;
    /**
    * Orders submitted via the store's website will include a `www` value. Orders submitted via the API will be set to `external`. A read-only value. Do not pass in a POST or PUT.
    * @member {String} order_source
    */
    'order_source' = undefined;
    /**
    * For orders submitted or modified via the API, using a PUT or POST operation, you can optionally pass in a value identifying the system used to generate the order. For example: `POS`. Otherwise, the value will be null.
    * @member {String} external_source
    */
    'external_source' = undefined;
    /**
    * @member {module:model/ProductsResource1} products
    */
    'products' = undefined;
    /**
    * @member {module:model/ShippingAddressResource} shipping_addresses
    */
    'shipping_addresses' = undefined;
    /**
    * @member {module:model/CouponsResource1} coupons
    */
    'coupons' = undefined;
    /**
    * ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field 'external_id' cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set.
    * @member {String} external_id
    */
    'external_id' = undefined;
    /**
    * ID of the merchant
    * @member {String} external_merchant_id
    */
    'external_merchant_id' = undefined;
    /**
    * Shows where the order originated. The channel_id will default to 1.
    * @member {Number} channel_id
    */
    'channel_id' = undefined;
    /**
    * BasicTaxProvider - Tax is set to manual.  AvaTaxProvider - This is for when the tax provider has been set to automatic and the order was NOT created by the API. Used for Avalara.  \"\" (blank) - When the tax provider is unknown. This includes legacy orders and orders previously created via API. This can be set when creating an order using a POST.  
    * @member {module:model/OrderFull1.TaxProviderIdEnum} tax_provider_id
    */
    'tax_provider_id' = undefined;



    /**
    * Allowed values for the <code>tax_provider_id</code> property.
    * @enum {String}
    * @readonly
    */
    static TaxProviderIdEnum = {
        /**
         * value: "BasicTaxProvider"
         * @const
         */
        "BasicTaxProvider": "BasicTaxProvider",
        /**
         * value: "AvaTaxProvider"
         * @const
         */
        "AvaTaxProvider": "AvaTaxProvider",
        /**
         * value: ""
         * @const
         */
        "empty": ""    };

}
