/**
 * Store Information
 * ### Store Information Reference The Store Information object, and Get Store Information endpoint, manage store profile settings. A Store Information object represents an individual storeâ€™s profile and metadata.  ### System Reference The Get a Timestamp endpoint generates a timestamp ping to check the system status.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The StoreInformationFeatures model module.
* @module model/StoreInformationFeatures
* @version 2.0
*/
export default class StoreInformationFeatures {
    /**
    * Constructs a new <code>StoreInformationFeatures</code>.
    * + &#x60;stencil_enabled&#x60;: &#x60;true&#x60; (boolean)     + &#x60;sitewidehttps_enabled&#x60;: &#x60;false&#x60; (boolean)     + &#x60;facebook_catalog_id&#x60; (string)
    * @alias module:model/StoreInformationFeatures
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>StoreInformationFeatures</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/StoreInformationFeatures} obj Optional instance to populate.
    * @return {module:model/StoreInformationFeatures} The populated <code>StoreInformationFeatures</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StoreInformationFeatures();
                        
            
            if (data.hasOwnProperty('stencil_enabled')) {
                obj['stencil_enabled'] = ApiClient.convertToType(data['stencil_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('sitewidehttps_enabled')) {
                obj['sitewidehttps_enabled'] = ApiClient.convertToType(data['sitewidehttps_enabled'], 'String');
            }
            if (data.hasOwnProperty('facebook_catalog_id')) {
                obj['facebook_catalog_id'] = ApiClient.convertToType(data['facebook_catalog_id'], 'String');
            }
            if (data.hasOwnProperty('checkout_type')) {
                obj['checkout_type'] = ApiClient.convertToType(data['checkout_type'], 'String');
            }
        }
        return obj;
    }

    /**
    * Indicates whether a store is using a Stencil theme.
    * @member {Boolean} stencil_enabled
    */
    'stencil_enabled' = undefined;
    /**
    * Indicates if there is sitewide https.
    * @member {String} sitewidehttps_enabled
    */
    'sitewidehttps_enabled' = undefined;
    /**
    * Id of the facebook catalog. If there is none, it returns an empty string. 
    * @member {String} facebook_catalog_id
    */
    'facebook_catalog_id' = undefined;
    /**
    * What type of checkout is enabled on the store. Possible values returned are optimized, single (one page), single_customizable (one page for developers), klarna.
    * @member {String} checkout_type
    */
    'checkout_type' = undefined;




}
