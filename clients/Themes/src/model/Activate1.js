/**
 * Themes
 * - [OAuth Scopes](#oauth-scopes) - [Authentication](#authentication)  With BigCommerce's V3 REST API Theme endpoints, developers can: * backup themes * restore themes * download themes * activate themes * get status of theme jobs * read theme configurations  ## OAuth Scopes | UI Name                                      | Permission | Parameter                                     | |----------------------------------------------|------------|-----------------------------------------------| | Themes                                       | modify     | `store_themes_manage`                         |  For more information on OAuth Scopes, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).  ## Authentication  Requests can be authenticated by sending a `client_id` and `access_token` via `X-Auth-Client` and `X-Auth-Token` HTTP headers:  ```http GET /stores/{$$.env.store_hash}/v3/catalog/summary host: api.bigcommerce.com Accept: application/json X-Auth-Client: {client_id} X-Auth-Token: {access_token} ```  |Header|Parameter|Description| |-|-|-| |`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.| |`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|  For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The Activate1 model module.
* @module model/Activate1
* @version 3.0
*/
export default class Activate1 {
    /**
    * Constructs a new <code>Activate1</code>.
    * Request definition for activation endpoint.
    * @alias module:model/Activate1
    * @class
    * @param variationId {String} The identifier for the variation to activate.
    * @param which {module:model/Activate1.WhichEnum} Which configuration to use.
    */

    constructor(variationId, which) {
        
        
        this['variation_id'] = variationId;
        this['which'] = which;
        
    }

    /**
    * Constructs a <code>Activate1</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Activate1} obj Optional instance to populate.
    * @return {module:model/Activate1} The populated <code>Activate1</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Activate1();
                        
            
            if (data.hasOwnProperty('variation_id')) {
                obj['variation_id'] = ApiClient.convertToType(data['variation_id'], 'String');
            }
            if (data.hasOwnProperty('which')) {
                obj['which'] = ApiClient.convertToType(data['which'], 'String');
            }
        }
        return obj;
    }

    /**
    * The identifier for the variation to activate.
    * @member {String} variation_id
    */
    'variation_id' = undefined;
    /**
    * Which configuration to use.
    * @member {module:model/Activate1.WhichEnum} which
    */
    'which' = undefined;



    /**
    * Allowed values for the <code>which</code> property.
    * @enum {String}
    * @readonly
    */
    static WhichEnum = {
        /**
         * value: "original"
         * @const
         */
        "original": "original",
        /**
         * value: "last_activated"
         * @const
         */
        "last_activated": "last_activated",
        /**
         * value: "last_created"
         * @const
         */
        "last_created": "last_created"    };

}
