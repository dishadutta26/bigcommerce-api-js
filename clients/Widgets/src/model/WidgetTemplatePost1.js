/**
 * Widgets
 * Widgets API allows developers to programatically inject content into a BigCommerce theme. To learn how to use Widgets, see our [Widgets Overview](/api-docs/storefront/widgets/widgets-overview).
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The WidgetTemplatePost1 model module.
* @module model/WidgetTemplatePost1
* @version 3.0
*/
export default class WidgetTemplatePost1 {
    /**
    * Constructs a new <code>WidgetTemplatePost1</code>.
    * @alias module:model/WidgetTemplatePost1
    * @class
    * @param name {String} User friendly name.
    * @param template {String} Handlebars HTML content. Also has access to Stencil Paper helpers.
    */

    constructor(name, template) {
        
        
        this['name'] = name;
        this['template'] = template;
        
    }

    /**
    * Constructs a <code>WidgetTemplatePost1</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/WidgetTemplatePost1} obj Optional instance to populate.
    * @return {module:model/WidgetTemplatePost1} The populated <code>WidgetTemplatePost1</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WidgetTemplatePost1();
                        
            
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('schema')) {
                obj['schema'] = ApiClient.convertToType(data['schema'], [Object]);
            }
            if (data.hasOwnProperty('template')) {
                obj['template'] = ApiClient.convertToType(data['template'], 'String');
            }
        }
        return obj;
    }

    /**
    * User friendly name.
    * @member {String} name
    */
    'name' = undefined;
    /**
    * The schema for the widget's merchant-facing UI. For more information, see [Page Builder Overview](https://developer.bigcommerce.com/stencil-docs/page-builder/page-builder-overview) 
    * @member {Array.<Object>} schema
    */
    'schema' = undefined;
    /**
    * Handlebars HTML content. Also has access to Stencil Paper helpers.
    * @member {String} template
    */
    'template' = undefined;




}
