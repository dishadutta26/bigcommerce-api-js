/*
 * Widgets
 * Widgets API allows developers to programatically inject content into a BigCommerce theme. To learn how to use Widgets, see our [Widgets Overview](/api-docs/storefront/widgets/widgets-overview).
 *
 * OpenAPI spec version: 3.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.21
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'), require('../../src/BCApiClient'), require('../config'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Widgets);
  }
}(this, function(expect, Widgets, BCApiClient, config) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Widgets.PlacementApi(new BCApiClient(config));
  });

  describe('(package)', function() {
    describe('PlacementApi', function() {
      describe('createPlacement', function() {
        it('should call createPlacement successfully', async function() {
          // const createPlacementResponse = await instance.createPlacement();
          // expect(createPlacementResponse.ok).to.be(true);
          // expect(createPlacementResponse.body.data).to.be.an('array');
        });
      });
      describe('deletePlacement', function() {
        it('should call deletePlacement successfully', async function() {
          // const deletePlacementResponse = await instance.deletePlacement();
          // expect(deletePlacementResponse.ok).to.be(true);
          // expect(deletePlacementResponse.body.data).to.be.an('array');
        });
      });
      describe('getPlacement', function() {
        it('should call getPlacement successfully', async function() {
          // const getPlacementResponse = await instance.getPlacement();
          // expect(getPlacementResponse.ok).to.be(true);
          // expect(getPlacementResponse.body.data).to.be.an('array');
        });
      });
      describe('getPlacements', function() {
        it('should call getPlacements successfully', async function() {
          // const getPlacementsResponse = await instance.getPlacements();
          // expect(getPlacementsResponse.ok).to.be(true);
          // expect(getPlacementsResponse.body.data).to.be.an('array');
        });
      });
      describe('updatePlacement', function() {
        it('should call updatePlacement successfully', async function() {
          // const updatePlacementResponse = await instance.updatePlacement();
          // expect(updatePlacementResponse.ok).to.be(true);
          // expect(updatePlacementResponse.body.data).to.be.an('array');
        });
      });
    });
  });

}));
