/**
 * Widgets
 * Widgets API allows developers to programatically inject content into a BigCommerce theme. To learn how to use Widgets, see our [Widgets Overview](/api-docs/storefront/widgets/widgets-overview).
 *
 * OpenAPI spec version: 3.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The WidgetPut1 model module.
* @module model/WidgetPut1
* @version 3.0
*/
export default class WidgetPut1 {
    /**
    * Constructs a new <code>WidgetPut1</code>.
    * @alias module:model/WidgetPut1
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>WidgetPut1</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/WidgetPut1} obj Optional instance to populate.
    * @return {module:model/WidgetPut1} The populated <code>WidgetPut1</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WidgetPut1();
                        
            
            if (data.hasOwnProperty('widget_template_uuid')) {
                obj['widget_template_uuid'] = ApiClient.convertToType(data['widget_template_uuid'], 'String');
            }
        }
        return obj;
    }

    /**
    * The widget template UUID.
    * @member {String} widget_template_uuid
    */
    'widget_template_uuid' = undefined;




}
