'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

/*
 * Store Information
 * ### Store Information Reference The Store Information object, and Get Store Information endpoint, manage store profile settings. A Store Information object represents an individual storeâ€™s profile and metadata.  ### System Reference The Get a Timestamp endpoint generates a timestamp ping to check the system status.
 *
 * OpenAPI spec version: 2.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.21
 *
 * Do not edit the class manually.
 *
 */
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StoreInformation);
  }
})(undefined, function (expect, StoreInformation) {
  'use strict';

  var instance;

  describe('(package)', function () {
    describe('StoreInformationLogo', function () {
      beforeEach(function () {
        instance = new StoreInformation.StoreInformationLogo();
      });

      it('should create an instance of StoreInformationLogo', function () {
        expect(instance).to.be.a(StoreInformation.StoreInformationLogo);
      });

      it('should have the property url (base name: "url")', function () {
        expect(instance).to.have.property('url');
        // expect(instance.url).to.be(expectedValueLiteral);
      });
    });
  });
});