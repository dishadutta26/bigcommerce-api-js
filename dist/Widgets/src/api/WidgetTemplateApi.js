'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
idgets
idgets API allows developers to programatically inject content into a BigCommerce theme. To learn how to use Widgets, see our [Widgets Overview](/api-docs/storefront/widgets/widgets-overview).

penAPI spec version: 3.0


his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _ErrorBase = require('../model/ErrorBase1');

var _ErrorBase2 = _interopRequireDefault(_ErrorBase);

var _InlineResponse = require('../model/InlineResponse200');

var _InlineResponse2 = _interopRequireDefault(_InlineResponse);

var _WidgetTemplateBase = require('../model/WidgetTemplateBase1');

var _WidgetTemplateBase2 = _interopRequireDefault(_WidgetTemplateBase);

var _WidgetTemplatePost = require('../model/WidgetTemplatePost1');

var _WidgetTemplatePost2 = _interopRequireDefault(_WidgetTemplatePost);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* WidgetTemplate service.
* @module api/WidgetTemplateApi
* @version 3.0
*/
var WidgetTemplateApi = function () {

  /**
  * Constructs a new WidgetTemplateApi. 
  * @alias module:api/WidgetTemplateApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function WidgetTemplateApi(apiClient) {
    _classCallCheck(this, WidgetTemplateApi);

    this.apiClient = apiClient || _ApiClient2.default.instance;
  }

  /**
   * Callback function to receive the result of the createWidgetTemplate operation.
   * @callback module:api/WidgetTemplateApi~createWidgetTemplateCallback
   * @param {String} error Error message, if any.
   * @param {Object} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Create a Widget Template
   * Creates a **Widget Template**.  ***Note:*** *There is a limit of 100 custom widget templates per store.*  **Required Fields** * name * template
   * @param {Object} opts Optional parameters
   * @param {module:api/WidgetTemplateApi~createWidgetTemplateCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link Object}
   */


  _createClass(WidgetTemplateApi, [{
    key: 'createWidgetTemplate',
    value: function createWidgetTemplate(body, opts, callback) {
      opts = opts || {};
      var postBody = body;

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'Accept': opts['accept'],
        'Content-Type': opts['contentType']
      };
      var formParams = {};

      var authNames = ['X-Auth-Client', 'X-Auth-Token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi('/content/widget-templates', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the deleteWidgetTemplate operation.
     * @callback module:api/WidgetTemplateApi~deleteWidgetTemplateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete A Widget Template
     * Delete a **Widget Template**.
     * @param {Object} opts Optional parameters
     * @param {module:api/WidgetTemplateApi~deleteWidgetTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     */

  }, {
    key: 'deleteWidgetTemplate',
    value: function deleteWidgetTemplate(uuid, opts, callback) {
      opts = opts || {};
      var postBody = null;

      var pathParams = {
        'uuid': uuid
      };
      var queryParams = {};
      var headerParams = {
        'Accept': opts['accept'],
        'Content-Type': opts['contentType']
      };
      var formParams = {};

      var authNames = ['X-Auth-Client', 'X-Auth-Token'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = null;

      return this.apiClient.callApi('/content/widget-templates/{uuid}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the getWidgetTemplate operation.
     * @callback module:api/WidgetTemplateApi~getWidgetTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Widget Template
     * Return a single **Widget Template**.
     * @param {Object} opts Optional parameters
     * @param {module:api/WidgetTemplateApi~getWidgetTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */

  }, {
    key: 'getWidgetTemplate',
    value: function getWidgetTemplate(uuid, opts, callback) {
      opts = opts || {};
      var postBody = null;

      var pathParams = {
        'uuid': uuid
      };
      var queryParams = {};
      var headerParams = {
        'Accept': opts['accept'],
        'Content-Type': opts['contentType']
      };
      var formParams = {};

      var authNames = ['X-Auth-Client', 'X-Auth-Token'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi('/content/widget-templates/{uuid}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the getWidgetTemplates operation.
     * @callback module:api/WidgetTemplateApi~getWidgetTemplatesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All Widget Templates
     * Returns a list of **Widget Templates**.
     * @param {Object} opts Optional parameters
     * @param {module:api/WidgetTemplateApi~getWidgetTemplatesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */

  }, {
    key: 'getWidgetTemplates',
    value: function getWidgetTemplates(opts, callback) {
      opts = opts || {};
      var postBody = null;

      var pathParams = {};
      var queryParams = {
        'page': opts['page'],
        'limit': opts['limit'],
        'widget_template_kind': opts['widgetTemplateKind']
      };
      var headerParams = {
        'Accept': opts['accept'],
        'Content-Type': opts['contentType']
      };
      var formParams = {};

      var authNames = ['X-Auth-Client', 'X-Auth-Token'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _InlineResponse2.default;

      return this.apiClient.callApi('/content/widget-templates', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the updateWidgetTemplate operation.
     * @callback module:api/WidgetTemplateApi~updateWidgetTemplateCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a Widget Template
     * Update a **Widget Template**.
     * @param {Object} opts Optional parameters
     * @param {module:api/WidgetTemplateApi~updateWidgetTemplateCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */

  }, {
    key: 'updateWidgetTemplate',
    value: function updateWidgetTemplate(body, uuid, opts, callback) {
      opts = opts || {};
      var postBody = body;

      var pathParams = {
        'uuid': uuid
      };
      var queryParams = {};
      var headerParams = {
        'Accept': opts['accept'],
        'Content-Type': opts['contentType']
      };
      var formParams = {};

      var authNames = ['X-Auth-Client', 'X-Auth-Token'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = Object;

      return this.apiClient.callApi('/content/widget-templates/{uuid}', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
  }]);

  return WidgetTemplateApi;
}();

exports.default = WidgetTemplateApi;