/**
 * Product Pricing API
 * API to provide marketing/display pricing for products, variants, and partially configured selections.
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/PricingRequest', 'Model/PricingResponse'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../Model/PricingRequest'), require('../Model/PricingResponse'));
  } else {
    // Browser globals (root is window)
    if (!root.ProductPricingApi) {
      root.ProductPricingApi = {};
    }
    root.ProductPricingApi.PricingApi = factory(root.ProductPricingApi.ApiClient, root.ProductPricingApi.PricingRequest, root.ProductPricingApi.PricingResponse);
  }
}(this, function(ApiClient, PricingRequest, PricingResponse) {
  'use strict';

  /**
   * Pricing service.
   * @module Api/PricingApi
   * @version master
   */

  /**
   * Constructs a new PricingApi. 
   * @alias module:Api/PricingApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * Get Prices
     * @param {module:Model/PricingRequest} body 
     * @param callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:Model/PricingResponse}
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:Model/PricingResponse} if callback is null
     */
    this.getPrices = function(body, opts, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling getPrices");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = PricingResponse;

      return this.apiClient.callApi(
        '/pricing/products', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
