/**
 * BigCommerce API
 * A Swagger Document for the BigCommmerce v3 Catalog API.
 *
 * OpenAPI spec version: 3.0.0b
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BigCommerceApi) {
      root.BigCommerceApi = {};
    }
    root.BigCommerceApi.BulkPricingRuleBase = factory(root.BigCommerceApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The BulkPricingRuleBase model module.
   * @module Model/BulkPricingRuleBase
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>BulkPricingRuleBase</code>.
   * Common BulkPricingRule properties 
   * @alias module:Model/BulkPricingRuleBase
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>BulkPricingRuleBase</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/BulkPricingRuleBase} obj Optional instance to populate.
   * @return {module:Model/BulkPricingRuleBase} The populated <code>BulkPricingRuleBase</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('quantity_min')) {
        obj['quantity_min'] = ApiClient.convertToType(data['quantity_min'], 'Number');
      }
      if (data.hasOwnProperty('quantity_max')) {
        obj['quantity_max'] = ApiClient.convertToType(data['quantity_max'], 'Number');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
    }
    return obj;
  }

  /**
   * The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero. 
   * @member {Number} quantity_min
   */
  exports.prototype['quantity_min'] = undefined;
  /**
   * The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value â€“ unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule. 
   * @member {Number} quantity_max
   */
  exports.prototype['quantity_max'] = undefined;
  /**
   * The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product. 
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * The value of the adjustment by the bulk pricing rule. 
   * @member {Number} amount
   */
  exports.prototype['amount'] = undefined;



  return exports;
}));


