/**
 * Data Model for BigCommerce's v3 Server-to-Server Cart API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/Currency', 'Model/LineItemGiftCertificateRequestData', 'Model/LineItemRequestData'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Currency'), require('./LineItemGiftCertificateRequestData'), require('./LineItemRequestData'));
  } else {
    // Browser globals (root is window)
    if (!root.DataModelForBigCommercesV3ServerToServerCartApi) {
      root.DataModelForBigCommercesV3ServerToServerCartApi = {};
    }
    root.DataModelForBigCommercesV3ServerToServerCartApi.CartRequestData = factory(root.DataModelForBigCommercesV3ServerToServerCartApi.ApiClient, root.DataModelForBigCommercesV3ServerToServerCartApi.Currency, root.DataModelForBigCommercesV3ServerToServerCartApi.LineItemGiftCertificateRequestData, root.DataModelForBigCommercesV3ServerToServerCartApi.LineItemRequestData);
  }
}(this, function(ApiClient, Currency, LineItemGiftCertificateRequestData, LineItemRequestData) {
  'use strict';




  /**
   * The CartRequestData model module.
   * @module Model/CartRequestData
   * @version v0.0.1
   */

  /**
   * Constructs a new <code>CartRequestData</code>.
   * @alias module:Model/CartRequestData
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>CartRequestData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/CartRequestData} obj Optional instance to populate.
   * @return {module:Model/CartRequestData} The populated <code>CartRequestData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('line_items')) {
        obj['line_items'] = ApiClient.convertToType(data['line_items'], [LineItemRequestData]);
      }
      if (data.hasOwnProperty('gift_certificates')) {
        obj['gift_certificates'] = ApiClient.convertToType(data['gift_certificates'], [LineItemGiftCertificateRequestData]);
      }
      if (data.hasOwnProperty('customer_id')) {
        obj['customer_id'] = ApiClient.convertToType(data['customer_id'], 'Number');
      }
      if (data.hasOwnProperty('channel_id')) {
        obj['channel_id'] = ApiClient.convertToType(data['channel_id'], 'Number');
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = Currency.constructFromObject(data['currency']);
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:Model/LineItemRequestData>} line_items
   */
  exports.prototype['line_items'] = undefined;
  /**
   * @member {Array.<module:Model/LineItemGiftCertificateRequestData>} gift_certificates
   */
  exports.prototype['gift_certificates'] = undefined;
  /**
   * @member {Number} customer_id
   */
  exports.prototype['customer_id'] = undefined;
  /**
   * @member {Number} channel_id
   */
  exports.prototype['channel_id'] = undefined;
  /**
   * @member {module:Model/Currency} currency
   */
  exports.prototype['currency'] = undefined;



  return exports;
}));


