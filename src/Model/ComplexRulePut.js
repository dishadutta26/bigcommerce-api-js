/**
 * BigCommerce API
 * A Swagger Document for the BigCommmerce v3 Catalog API.
 *
 * OpenAPI spec version: 3.0.0b
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/Adjuster', 'Model/ComplexRuleBase', 'Model/ComplexRuleConditionPut'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Adjuster'), require('./ComplexRuleBase'), require('./ComplexRuleConditionPut'));
  } else {
    // Browser globals (root is window)
    if (!root.BigCommerceApi) {
      root.BigCommerceApi = {};
    }
    root.BigCommerceApi.ComplexRulePut = factory(root.BigCommerceApi.ApiClient, root.BigCommerceApi.Adjuster, root.BigCommerceApi.ComplexRuleBase, root.BigCommerceApi.ComplexRuleConditionPut);
  }
}(this, function(ApiClient, Adjuster, ComplexRuleBase, ComplexRuleConditionPut) {
  'use strict';




  /**
   * The ComplexRulePut model module.
   * @module Model/ComplexRulePut
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>ComplexRulePut</code>.
   * The model for a PUT to update a complex rule on a product. 
   * @alias module:Model/ComplexRulePut
   * @class
   * @implements module:Model/ComplexRuleBase
   */
  var exports = function() {
    var _this = this;

    ComplexRuleBase.call(_this);


  };

  /**
   * Constructs a <code>ComplexRulePut</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/ComplexRulePut} obj Optional instance to populate.
   * @return {module:Model/ComplexRulePut} The populated <code>ComplexRulePut</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      ComplexRuleBase.constructFromObject(data, obj);
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('conditions')) {
        obj['conditions'] = ApiClient.convertToType(data['conditions'], [ComplexRuleConditionPut]);
      }
    }
    return obj;
  }

  /**
   * The unique numeric ID of the rule; increments sequentially. 
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {Array.<module:Model/ComplexRuleConditionPut>} conditions
   */
  exports.prototype['conditions'] = undefined;

  // Implement ComplexRuleBase interface:
  /**
   * The unique numeric ID of the product with which the rule is associated; increments sequentially. 
   * @member {Number} product_id
   */
exports.prototype['product_id'] = undefined;

  /**
   * The priority to give this rule when making adjustments to the product properties. 
   * @member {Number} sort_order
   */
exports.prototype['sort_order'] = undefined;

  /**
   * Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty. 
   * @member {Boolean} enabled
   */
exports.prototype['enabled'] = undefined;

  /**
   * Flag for determining whether other rules should not be applied after this rule has been applied. 
   * @member {Boolean} stop
   */
exports.prototype['stop'] = undefined;

  /**
   * Flag for determining whether the rule should disable purchasing of a product when the conditions are applied. 
   * @member {Boolean} purchasing_disabled
   */
exports.prototype['purchasing_disabled'] = undefined;

  /**
   * Message displayed on the storefront when a rule disables the purchasing of a product. 
   * @member {String} purchasing_disabled_message
   */
exports.prototype['purchasing_disabled_message'] = undefined;

  /**
   * Flag for determining whether the rule should hide purchasing of a product when the conditions are applied. 
   * @member {Boolean} purchasing_hidden
   */
exports.prototype['purchasing_hidden'] = undefined;

  /**
   * @member {module:Model/Adjuster} price_adjuster
   */
exports.prototype['price_adjuster'] = undefined;

  /**
   * @member {module:Model/Adjuster} weight_adjuster
   */
exports.prototype['weight_adjuster'] = undefined;



  return exports;
}));


