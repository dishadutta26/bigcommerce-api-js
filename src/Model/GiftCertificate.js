/**
 * BigCommerce API
 * A Swagger Document for the BigCommmerce v3 Order Transactions API.
 *
 * OpenAPI spec version: 3.0.0b
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BigCommerceApi) {
      root.BigCommerceApi = {};
    }
    root.BigCommerceApi.GiftCertificate = factory(root.BigCommerceApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The GiftCertificate model module.
   * @module Model/GiftCertificate
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>GiftCertificate</code>.
   * A gift-certificate model. 
   * @alias module:Model/GiftCertificate
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>GiftCertificate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/GiftCertificate} obj Optional instance to populate.
   * @return {module:Model/GiftCertificate} The populated <code>GiftCertificate</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('code')) {
        obj['code'] = ApiClient.convertToType(data['code'], 'String');
      }
      if (data.hasOwnProperty('original_balance')) {
        obj['original_balance'] = ApiClient.convertToType(data['original_balance'], 'Number');
      }
      if (data.hasOwnProperty('starting_balance')) {
        obj['starting_balance'] = ApiClient.convertToType(data['starting_balance'], 'Number');
      }
      if (data.hasOwnProperty('remaining_balance')) {
        obj['remaining_balance'] = ApiClient.convertToType(data['remaining_balance'], 'Number');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
    }
    return obj;
  }

  /**
   * The gift-certificate code. 
   * @member {String} code
   */
  exports.prototype['code'] = undefined;
  /**
   * The balance on a gift certificate when it was purchased. 
   * @member {Number} original_balance
   */
  exports.prototype['original_balance'] = undefined;
  /**
   * The balance on a gift certificate at the time of this purchase. 
   * @member {Number} starting_balance
   */
  exports.prototype['starting_balance'] = undefined;
  /**
   * The remaining balance on a gift certificate. 
   * @member {Number} remaining_balance
   */
  exports.prototype['remaining_balance'] = undefined;
  /**
   * The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired. 
   * @member {String} status
   */
  exports.prototype['status'] = undefined;



  return exports;
}));


