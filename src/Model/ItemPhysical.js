/**
 * Data Model for BigCommerce's v3 Server-to-Server Cart API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/AppliedCoupon', 'Model/AppliedDiscount', 'Model/BaseItem', 'Model/GiftWrapping', 'Model/ProductOption'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AppliedCoupon'), require('./AppliedDiscount'), require('./BaseItem'), require('./GiftWrapping'), require('./ProductOption'));
  } else {
    // Browser globals (root is window)
    if (!root.DataModelForBigCommercesV3ServerToServerCartApi) {
      root.DataModelForBigCommercesV3ServerToServerCartApi = {};
    }
    root.DataModelForBigCommercesV3ServerToServerCartApi.ItemPhysical = factory(root.DataModelForBigCommercesV3ServerToServerCartApi.ApiClient, root.DataModelForBigCommercesV3ServerToServerCartApi.AppliedCoupon, root.DataModelForBigCommercesV3ServerToServerCartApi.AppliedDiscount, root.DataModelForBigCommercesV3ServerToServerCartApi.BaseItem, root.DataModelForBigCommercesV3ServerToServerCartApi.GiftWrapping, root.DataModelForBigCommercesV3ServerToServerCartApi.ProductOption);
  }
}(this, function(ApiClient, AppliedCoupon, AppliedDiscount, BaseItem, GiftWrapping, ProductOption) {
  'use strict';




  /**
   * The ItemPhysical model module.
   * @module Model/ItemPhysical
   * @version v0.0.1
   */

  /**
   * Constructs a new <code>ItemPhysical</code>.
   * @alias module:Model/ItemPhysical
   * @class
   * @implements module:Model/BaseItem
   * @param quantity {Number} 
   */
  var exports = function(quantity) {
    var _this = this;

    BaseItem.call(_this, quantity);


  };

  /**
   * Constructs a <code>ItemPhysical</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/ItemPhysical} obj Optional instance to populate.
   * @return {module:Model/ItemPhysical} The populated <code>ItemPhysical</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      BaseItem.constructFromObject(data, obj);
      if (data.hasOwnProperty('is_require_shipping')) {
        obj['is_require_shipping'] = ApiClient.convertToType(data['is_require_shipping'], 'Boolean');
      }
      if (data.hasOwnProperty('gift_wrapping')) {
        obj['gift_wrapping'] = GiftWrapping.constructFromObject(data['gift_wrapping']);
      }
    }
    return obj;
  }

  /**
   * @member {Boolean} is_require_shipping
   */
  exports.prototype['is_require_shipping'] = undefined;
  /**
   * @member {module:Model/GiftWrapping} gift_wrapping
   */
  exports.prototype['gift_wrapping'] = undefined;

  // Implement BaseItem interface:
  /**
   * The line-item ID.
   * @member {String} id
   */
exports.prototype['id'] = undefined;

  /**
   * The parent line-item ID.
   * @member {String} parent_id
   */
exports.prototype['parent_id'] = undefined;

  /**
   * @member {Number} variant_id
   */
exports.prototype['variant_id'] = undefined;

  /**
   * @member {Number} product_id
   */
exports.prototype['product_id'] = undefined;

  /**
   * @member {String} sku
   */
exports.prototype['sku'] = undefined;

  /**
   * The item's product name.
   * @member {String} name
   */
exports.prototype['name'] = undefined;

  /**
   * The product URL.
   * @member {String} url
   */
exports.prototype['url'] = undefined;

  /**
   * @member {Number} quantity
   */
exports.prototype['quantity'] = undefined;

  /**
   * @member {Boolean} is_taxable
   */
exports.prototype['is_taxable'] = undefined;

  /**
   * @member {String} image_url
   */
exports.prototype['image_url'] = undefined;

  /**
   * @member {Array.<module:Model/AppliedDiscount>} discounts
   */
exports.prototype['discounts'] = undefined;

  /**
   * @member {Array.<module:Model/AppliedCoupon>} coupons
   */
exports.prototype['coupons'] = undefined;

  /**
   * The total value of all discounts applied to this item.
   * @member {Number} discount_amount
   */
exports.prototype['discount_amount'] = undefined;

  /**
   * The total value of all coupons applied to this item.
   * @member {Number} coupon_amount
   */
exports.prototype['coupon_amount'] = undefined;

  /**
   * Item's list price, as quoted by the manufacturer/distributor.
   * @member {Number} list_price
   */
exports.prototype['list_price'] = undefined;

  /**
   * Item's price after all discounts are applied. (The final price before tax calculation.)
   * @member {Number} sale_price
   */
exports.prototype['sale_price'] = undefined;

  /**
   * Item's list price multiplied by the quantity.
   * @member {Number} extended_list_price
   */
exports.prototype['extended_list_price'] = undefined;

  /**
   * Item's sale price multiplied by the quantity.
   * @member {Number} extended_sale_price
   */
exports.prototype['extended_sale_price'] = undefined;

  /**
   * The list of selected options for this product.
   * @member {Array.<module:Model/ProductOption>} options
   */
exports.prototype['options'] = undefined;



  return exports;
}));


