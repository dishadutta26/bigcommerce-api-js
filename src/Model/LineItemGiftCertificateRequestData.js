/**
 * Data Model for BigCommerce's v3 Server-to-Server Cart API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/ContactEntity'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ContactEntity'));
  } else {
    // Browser globals (root is window)
    if (!root.DataModelForBigCommercesV3ServerToServerCartApi) {
      root.DataModelForBigCommercesV3ServerToServerCartApi = {};
    }
    root.DataModelForBigCommercesV3ServerToServerCartApi.LineItemGiftCertificateRequestData = factory(root.DataModelForBigCommercesV3ServerToServerCartApi.ApiClient, root.DataModelForBigCommercesV3ServerToServerCartApi.ContactEntity);
  }
}(this, function(ApiClient, ContactEntity) {
  'use strict';




  /**
   * The LineItemGiftCertificateRequestData model module.
   * @module Model/LineItemGiftCertificateRequestData
   * @version v0.0.1
   */

  /**
   * Constructs a new <code>LineItemGiftCertificateRequestData</code>.
   * @alias module:Model/LineItemGiftCertificateRequestData
   * @class
   * @param name {String} Given name for gift certificate line item.
   * @param theme {String} Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.
   * @param amount {Number} 
   * @param quantity {Number} 
   * @param sender {module:Model/ContactEntity} 
   * @param recipient {module:Model/ContactEntity} 
   */
  var exports = function(name, theme, amount, quantity, sender, recipient) {
    var _this = this;

    _this['name'] = name;
    _this['theme'] = theme;
    _this['amount'] = amount;
    _this['quantity'] = quantity;
    _this['sender'] = sender;
    _this['recipient'] = recipient;

  };

  /**
   * Constructs a <code>LineItemGiftCertificateRequestData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/LineItemGiftCertificateRequestData} obj Optional instance to populate.
   * @return {module:Model/LineItemGiftCertificateRequestData} The populated <code>LineItemGiftCertificateRequestData</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('theme')) {
        obj['theme'] = ApiClient.convertToType(data['theme'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('quantity')) {
        obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
      }
      if (data.hasOwnProperty('sender')) {
        obj['sender'] = ContactEntity.constructFromObject(data['sender']);
      }
      if (data.hasOwnProperty('recipient')) {
        obj['recipient'] = ContactEntity.constructFromObject(data['recipient']);
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
    }
    return obj;
  }

  /**
   * Given name for gift certificate line item.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`, `General`, and `Girl`.
   * @member {String} theme
   */
  exports.prototype['theme'] = undefined;
  /**
   * @member {Number} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * @member {Number} quantity
   */
  exports.prototype['quantity'] = undefined;
  /**
   * @member {module:Model/ContactEntity} sender
   */
  exports.prototype['sender'] = undefined;
  /**
   * @member {module:Model/ContactEntity} recipient
   */
  exports.prototype['recipient'] = undefined;
  /**
   * Message shown to recipient, as provided by sender.
   * @member {String} message
   */
  exports.prototype['message'] = undefined;



  return exports;
}));


