/**
 * Orders APIs
 * Orders APIs integrate with point-of-sale, shipping, distribution, and inventory-management systems.
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/OrderBase', 'Model/OrderBillingAddress', 'Model/OrderCouponsResource', 'Model/OrderProductsResource', 'Model/ShippingAddressesResource'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./OrderBase'), require('./OrderBillingAddress'), require('./OrderCouponsResource'), require('./OrderProductsResource'), require('./ShippingAddressesResource'));
  } else {
    // Browser globals (root is window)
    if (!root.OrdersApIs) {
      root.OrdersApIs = {};
    }
    root.OrdersApIs.Order = factory(root.OrdersApIs.ApiClient, root.OrdersApIs.OrderBase, root.OrdersApIs.OrderBillingAddress, root.OrdersApIs.OrderCouponsResource, root.OrdersApIs.OrderProductsResource, root.OrdersApIs.ShippingAddressesResource);
  }
}(this, function(ApiClient, OrderBase, OrderBillingAddress, OrderCouponsResource, OrderProductsResource, ShippingAddressesResource) {
  'use strict';




  /**
   * The Order model module.
   * @module Model/Order
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>Order</code>.
   * @alias module:Model/Order
   * @class
   * @implements module:Model/OrderBase
   */
  var exports = function() {
    var _this = this;

    OrderBase.call(_this);































  };

  /**
   * Constructs a <code>Order</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/Order} obj Optional instance to populate.
   * @return {module:Model/Order} The populated <code>Order</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      OrderBase.constructFromObject(data, obj);
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('date_modified')) {
        obj['date_modified'] = ApiClient.convertToType(data['date_modified'], 'String');
      }
      if (data.hasOwnProperty('date_shipped')) {
        obj['date_shipped'] = ApiClient.convertToType(data['date_shipped'], 'String');
      }
      if (data.hasOwnProperty('cart_id')) {
        obj['cart_id'] = ApiClient.convertToType(data['cart_id'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('custom_status')) {
        obj['custom_status'] = ApiClient.convertToType(data['custom_status'], 'String');
      }
      if (data.hasOwnProperty('subtotal_tax')) {
        obj['subtotal_tax'] = ApiClient.convertToType(data['subtotal_tax'], 'String');
      }
      if (data.hasOwnProperty('shipping_cost_tax')) {
        obj['shipping_cost_tax'] = ApiClient.convertToType(data['shipping_cost_tax'], 'String');
      }
      if (data.hasOwnProperty('shipping_cost_tax_class_id')) {
        obj['shipping_cost_tax_class_id'] = ApiClient.convertToType(data['shipping_cost_tax_class_id'], 'Number');
      }
      if (data.hasOwnProperty('handling_cost_tax')) {
        obj['handling_cost_tax'] = ApiClient.convertToType(data['handling_cost_tax'], 'String');
      }
      if (data.hasOwnProperty('handling_cost_tax_class_id')) {
        obj['handling_cost_tax_class_id'] = ApiClient.convertToType(data['handling_cost_tax_class_id'], 'Number');
      }
      if (data.hasOwnProperty('wrapping_cost_tax')) {
        obj['wrapping_cost_tax'] = ApiClient.convertToType(data['wrapping_cost_tax'], 'String');
      }
      if (data.hasOwnProperty('wrapping_cost_tax_class_id')) {
        obj['wrapping_cost_tax_class_id'] = ApiClient.convertToType(data['wrapping_cost_tax_class_id'], 'Number');
      }
      if (data.hasOwnProperty('total_tax')) {
        obj['total_tax'] = ApiClient.convertToType(data['total_tax'], 'String');
      }
      if (data.hasOwnProperty('payment_status')) {
        obj['payment_status'] = ApiClient.convertToType(data['payment_status'], 'String');
      }
      if (data.hasOwnProperty('store_credit_amount')) {
        obj['store_credit_amount'] = ApiClient.convertToType(data['store_credit_amount'], 'String');
      }
      if (data.hasOwnProperty('gift_certificate_amount')) {
        obj['gift_certificate_amount'] = ApiClient.convertToType(data['gift_certificate_amount'], 'String');
      }
      if (data.hasOwnProperty('currency_id')) {
        obj['currency_id'] = ApiClient.convertToType(data['currency_id'], 'Number');
      }
      if (data.hasOwnProperty('currency_code')) {
        obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
      }
      if (data.hasOwnProperty('currency_exchange_rate')) {
        obj['currency_exchange_rate'] = ApiClient.convertToType(data['currency_exchange_rate'], 'String');
      }
      if (data.hasOwnProperty('default_currency_id')) {
        obj['default_currency_id'] = ApiClient.convertToType(data['default_currency_id'], 'Number');
      }
      if (data.hasOwnProperty('default_currency_code')) {
        obj['default_currency_code'] = ApiClient.convertToType(data['default_currency_code'], 'String');
      }
      if (data.hasOwnProperty('coupon_discount')) {
        obj['coupon_discount'] = ApiClient.convertToType(data['coupon_discount'], 'String');
      }
      if (data.hasOwnProperty('shipping_address_count')) {
        obj['shipping_address_count'] = ApiClient.convertToType(data['shipping_address_count'], 'Number');
      }
      if (data.hasOwnProperty('is_email_opt_in')) {
        obj['is_email_opt_in'] = ApiClient.convertToType(data['is_email_opt_in'], 'Boolean');
      }
      if (data.hasOwnProperty('total_ex_tax')) {
        obj['total_ex_tax'] = ApiClient.convertToType(data['total_ex_tax'], 'String');
      }
      if (data.hasOwnProperty('total_inc_tax')) {
        obj['total_inc_tax'] = ApiClient.convertToType(data['total_inc_tax'], 'String');
      }
      if (data.hasOwnProperty('order_source')) {
        obj['order_source'] = ApiClient.convertToType(data['order_source'], 'String');
      }
      if (data.hasOwnProperty('products')) {
        obj['products'] = OrderProductsResource.constructFromObject(data['products']);
      }
      if (data.hasOwnProperty('shipping_addresses')) {
        obj['shipping_addresses'] = ShippingAddressesResource.constructFromObject(data['shipping_addresses']);
      }
      if (data.hasOwnProperty('coupons')) {
        obj['coupons'] = OrderCouponsResource.constructFromObject(data['coupons']);
      }
    }
    return obj;
  }

  /**
   * The ID of the order, a read-only value. Do not pass in PUT or POST.
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * A read-only value representing the last modification of the order. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822
   * @member {String} date_modified
   */
  exports.prototype['date_modified'] = undefined;
  /**
   * A read-only value representing the date of shipment. Do not attempt to modify or set this value in a POST or PUT operation. RFC-2822
   * @member {String} date_shipped
   */
  exports.prototype['date_shipped'] = undefined;
  /**
   * The cart ID from which this order originated, if applicable. Correlates with the Cart API. This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.
   * @member {String} cart_id
   */
  exports.prototype['cart_id'] = undefined;
  /**
   * The status will include one of the (string, optiona) - values defined under Order Statuses. This value is read-only. Do not attempt to modify or set this value in a POST or PUT operation.
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Contains the same (string, optiona) - value as the Order Statuses object's `custom_label` property.
   * @member {String} custom_status
   */
  exports.prototype['custom_status'] = undefined;
  /**
   * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)
   * @member {String} subtotal_tax
   */
  exports.prototype['subtotal_tax'] = undefined;
  /**
   * A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)
   * @member {String} shipping_cost_tax
   */
  exports.prototype['shipping_cost_tax'] = undefined;
  /**
   * Shipping-cost tax class. A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)
   * @member {Number} shipping_cost_tax_class_id
   */
  exports.prototype['shipping_cost_tax_class_id'] = undefined;
  /**
   * A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)
   * @member {String} handling_cost_tax
   */
  exports.prototype['handling_cost_tax'] = undefined;
  /**
   * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)
   * @member {Number} handling_cost_tax_class_id
   */
  exports.prototype['handling_cost_tax_class_id'] = undefined;
  /**
   * A read-only value. Do not attempt to modify or set this value in a POST or PUT operation. (Float, Float-As-String, Integer)
   * @member {String} wrapping_cost_tax
   */
  exports.prototype['wrapping_cost_tax'] = undefined;
  /**
   * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (NOTE: Value ignored if automatic tax is enabled on the store.)
   * @member {Number} wrapping_cost_tax_class_id
   */
  exports.prototype['wrapping_cost_tax_class_id'] = undefined;
  /**
   * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation. (Float, Float-As-String, Integer)
   * @member {String} total_tax
   */
  exports.prototype['total_tax'] = undefined;
  /**
   * A read-only value. Do not attempt to set or modify this value in a POST or PUT operation.
   * @member {String} payment_status
   */
  exports.prototype['payment_status'] = undefined;
  /**
   * Represents the store credit that the shopper has redeemed on this individual order. This is a read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)
   * @member {String} store_credit_amount
   */
  exports.prototype['store_credit_amount'] = undefined;
  /**
   * A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)
   * @member {String} gift_certificate_amount
   */
  exports.prototype['gift_certificate_amount'] = undefined;
  /**
   * The ID of the currency being used in this transaction. A read-only value. Do not pass in a POST or PUT.
   * @member {Number} currency_id
   */
  exports.prototype['currency_id'] = undefined;
  /**
   * The currency code of the currency being used in this transaction. A read-only value. Do not pass in a POST or PUT.
   * @member {String} currency_code
   */
  exports.prototype['currency_code'] = undefined;
  /**
   * A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)
   * @member {String} currency_exchange_rate
   */
  exports.prototype['currency_exchange_rate'] = undefined;
  /**
   * A read-only value. Do not pass in a POST or PUT.
   * @member {Number} default_currency_id
   */
  exports.prototype['default_currency_id'] = undefined;
  /**
   * The currency code of the default currency for this type of transaction. A read-only value. Do not pass in a POST or PUT.
   * @member {String} default_currency_code
   */
  exports.prototype['default_currency_code'] = undefined;
  /**
   * A read-only value. Do not pass in a POST or PUT. (Float, Float-As-String, Integer)
   * @member {String} coupon_discount
   */
  exports.prototype['coupon_discount'] = undefined;
  /**
   * The number of shipping addresses associated with this transaction. A read-only value. Do not pass in a POST or PUT.
   * @member {Number} shipping_address_count
   */
  exports.prototype['shipping_address_count'] = undefined;
  /**
   * Indicates whether the shopper has selected an opt-in check box (on the checkout page) to receive emails. A read-only value. Do not pass in a POST or PUT.
   * @member {Boolean} is_email_opt_in
   */
  exports.prototype['is_email_opt_in'] = undefined;
  /**
   * Override value for the total, excluding tax. If specified, the field `total_inc_tax` is also required. (Float, Float-As-String, Integer)
   * @member {String} total_ex_tax
   */
  exports.prototype['total_ex_tax'] = undefined;
  /**
   * Override value for the total, including tax. If specified, the field `total_ex_tax` is also required. (Float, Float-As-String, Integer) 
   * @member {String} total_inc_tax
   */
  exports.prototype['total_inc_tax'] = undefined;
  /**
   * Orders submitted via the store's website will include a `www` value. Orders submitted via the API will be set to `external`. A read-only value. Do not pass in a POST or PUT.
   * @member {String} order_source
   */
  exports.prototype['order_source'] = undefined;
  /**
   * @member {module:Model/OrderProductsResource} products
   */
  exports.prototype['products'] = undefined;
  /**
   * @member {module:Model/ShippingAddressesResource} shipping_addresses
   */
  exports.prototype['shipping_addresses'] = undefined;
  /**
   * @member {module:Model/OrderCouponsResource} coupons
   */
  exports.prototype['coupons'] = undefined;

  // Implement OrderBase interface:
  /**
   * @member {module:Model/OrderBillingAddress} billing_address
   */
exports.prototype['billing_address'] = undefined;

  /**
   * The ID of the customer placing the order; or 0 if it was a guest order.
   * @member {Number} customer_id
   */
exports.prototype['customer_id'] = undefined;

  /**
   * The status ID of the order.
   * @member {Number} status_id
   */
exports.prototype['status_id'] = undefined;

  /**
   * Override value for subtotal excluding tax. If specified, the field `subtotal_inc_tax` is also required. (Float, Float-As-String, Integer)
   * @member {String} subtotal_ex_tax
   */
exports.prototype['subtotal_ex_tax'] = undefined;

  /**
   * Override value for subtotal including tax. If specified, the field `subtotal_ex_tax` is also required. (Float, Float-As-String, Integer)
   * @member {String} subtotal_inc_tax
   */
exports.prototype['subtotal_inc_tax'] = undefined;

  /**
   * The value of the base shipping cost. (Float, Float-As-String, Integer)
   * @member {String} base_shipping_cost
   */
exports.prototype['base_shipping_cost'] = undefined;

  /**
   * The value of shipping cost, excluding tax. (Float, Float-As-String, Integer)
   * @member {String} shipping_cost_ex_tax
   */
exports.prototype['shipping_cost_ex_tax'] = undefined;

  /**
   * The value of shipping cost, including tax. (Float, Float-As-String, Integer)
   * @member {String} shipping_cost_inc_tax
   */
exports.prototype['shipping_cost_inc_tax'] = undefined;

  /**
   * The value of the base handling cost. (Float, Float-As-String, Integer)
   * @member {String} base_handling_cost
   */
exports.prototype['base_handling_cost'] = undefined;

  /**
   * The value of the handling cost, excluding tax. (Float, Float-As-String, Integer)
   * @member {String} handling_cost_ex_tax
   */
exports.prototype['handling_cost_ex_tax'] = undefined;

  /**
   * The value of the handling cost, including tax. (Float, Float-As-String, Integer)
   * @member {String} handling_cost_inc_tax
   */
exports.prototype['handling_cost_inc_tax'] = undefined;

  /**
   * The value of the base wrapping cost. (Float, Float-As-String, Integer)
   * @member {String} base_wrapping_cost
   */
exports.prototype['base_wrapping_cost'] = undefined;

  /**
   * The value of the wrapping cost, excluding tax. (Float, Float-As-String, Integer)
   * @member {String} wrapping_cost_ex_tax
   */
exports.prototype['wrapping_cost_ex_tax'] = undefined;

  /**
   * The value of the wrapping cost, including tax. (Float, Float-As-String, Integer)
   * @member {String} wrapping_cost_inc_tax
   */
exports.prototype['wrapping_cost_inc_tax'] = undefined;

  /**
   * The total number of items in the order.
   * @member {Number} items_total
   */
exports.prototype['items_total'] = undefined;

  /**
   * The number of items that have been shipped.
   * @member {Number} items_shipped
   */
exports.prototype['items_shipped'] = undefined;

  /**
   * The payment method for this order. Can be one of the following: `Manual`, `Credit Card`, `cash`, `Test Payment Gateway`, etc.
   * @member {String} payment_method
   */
exports.prototype['payment_method'] = undefined;

  /**
   * The external Transaction ID/Payment ID within this order's payment provider (if a payment provider was used).
   * @member {Number} payment_provider_id
   */
exports.prototype['payment_provider_id'] = undefined;

  /**
   * The amount refunded from this transaction. (Float, Float-As-String, Integer)
   * @member {String} refunded_amount
   */
exports.prototype['refunded_amount'] = undefined;

  /**
   * Whether this is an order for digital products.
   * @member {Boolean} order_is_digital
   */
exports.prototype['order_is_digital'] = undefined;

  /**
   * IP Address of the customer, if known.
   * @member {String} ip_address
   */
exports.prototype['ip_address'] = undefined;

  /**
   * The full name of the country where the customer made the purchase, based on the IP.
   * @member {String} geoip_country
   */
exports.prototype['geoip_country'] = undefined;

  /**
   * The country where the customer made the purchase, in ISO2 format, based on the IP.
   * @member {String} geoip_country_iso2
   */
exports.prototype['geoip_country_iso2'] = undefined;

  /**
   * Any additional notes for staff.
   * @member {String} staff_notes
   */
exports.prototype['staff_notes'] = undefined;

  /**
   * Message that the customer entered (number, optiona) -o the `Order Comments` box during checkout.
   * @member {String} customer_message
   */
exports.prototype['customer_message'] = undefined;

  /**
   * Amount of discount for this transaction. (Float, Float-As-String, Integer)
   * @member {String} discount_amount
   */
exports.prototype['discount_amount'] = undefined;

  /**
   * Indicates whether the order was deleted (archived). Set to to true, to archive an order.
   * @member {Boolean} is_deleted
   */
exports.prototype['is_deleted'] = undefined;

  /**
   * @member {Number} credit_card_type
   */
exports.prototype['credit_card_type'] = undefined;

  /**
   * If the order was placed through eBay, the eBay order number will be included. Otherwise, the value will be `0`.
   * @member {String} ebay_order_id
   */
exports.prototype['ebay_order_id'] = undefined;

  /**
   * For orders submitted or modified via the API, using a PUT or POST operation, you can optionally pass in a value identifying the system used to generate the order. For example: `POS`. Otherwise, the value will be null.
   * @member {String} external_source
   */
exports.prototype['external_source'] = undefined;

  /**
   * ID of the order in another system. For example, the Amazon Order ID if this is an Amazon order.This field can be updated in a /POST, but using a /PUT to update the order will return a 400 error. The field 'external_id' cannot be written to. Please remove it from your request before trying again. It can not be overwritten once set.
   * @member {Number} external_id
   */
exports.prototype['external_id'] = undefined;

  /**
   * Id of the external merchant.
   * @member {String} external_merchant_id
   */
exports.prototype['external_merchant_id'] = undefined;

  /**
   * Shows where the order originated. The channel_id will default to 1. Read-Only. 
   * @member {Number} channel_id
   */
exports.prototype['channel_id'] = undefined;

  /**
   * BasicTaxProvider - Tax is set to manual.   AvaTaxProvider - This is for when the tax provider has been set to automatic and the order was NOT created by the API. Used for Avalara.   \"\" (blank) - When the tax provider is unknown. This includes legacy orders and orders previously created via API. This can be set when creating an order using a POST.   
   * @member {String} tax_provider_id
   */
exports.prototype['tax_provider_id'] = undefined;

  /**
   * The date this order was created. If not specified, will default to the current time. The date should be in RFC 2822 format.
   * @member {String} date_created
   */
exports.prototype['date_created'] = undefined;



  return exports;
}));


