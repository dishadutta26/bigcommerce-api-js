/**
 * Orders APIs
 * Orders APIs integrate with point-of-sale, shipping, distribution, and inventory-management systems.
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.OrdersApIs) {
      root.OrdersApIs = {};
    }
    root.OrdersApIs.OrderProductAppliedDiscounts = factory(root.OrdersApIs.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The OrderProductAppliedDiscounts model module.
   * @module Model/OrderProductAppliedDiscounts
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>OrderProductAppliedDiscounts</code>.
   * When applying a manual discount to an order (not a product level discount), the discount is distributed across products in proportion to the products price.  &#x60;(total_manual_discount*price_ex_tax)/subtotal_ex_tax&#x60;
   * @alias module:Model/OrderProductAppliedDiscounts
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>OrderProductAppliedDiscounts</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/OrderProductAppliedDiscounts} obj Optional instance to populate.
   * @return {module:Model/OrderProductAppliedDiscounts} The populated <code>OrderProductAppliedDiscounts</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('code')) {
        obj['code'] = ApiClient.convertToType(data['code'], 'String');
      }
      if (data.hasOwnProperty('target')) {
        obj['target'] = ApiClient.convertToType(data['target'], 'String');
      }
    }
    return obj;
  }

  /**
   * Name of the coupon applied to order
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Amount of the discount.(Float, Float-As-String, Integer) 
   * @member {String} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * Name of the coupon.  `Manual Discount` when creating a manual discount.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Coupon Code.  There is no code when creating a manual discount.
   * @member {String} code
   */
  exports.prototype['code'] = undefined;
  /**
   * Determines if the discount if discount was applied at the Order or Product level. Read Only. 
   * @member {String} target
   */
  exports.prototype['target'] = undefined;



  return exports;
}));


