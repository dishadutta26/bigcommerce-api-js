/**
 * Orders APIs
 * Orders APIs integrate with point-of-sale, shipping, distribution, and inventory-management systems.
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/ShipmentItem'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ShipmentItem'));
  } else {
    // Browser globals (root is window)
    if (!root.OrdersApIs) {
      root.OrdersApIs = {};
    }
    root.OrdersApIs.OrderShipmentRequest = factory(root.OrdersApIs.ApiClient, root.OrdersApIs.ShipmentItem);
  }
}(this, function(ApiClient, ShipmentItem) {
  'use strict';




  /**
   * The OrderShipmentRequest model module.
   * @module Model/OrderShipmentRequest
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>OrderShipmentRequest</code>.
   * @alias module:Model/OrderShipmentRequest
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>OrderShipmentRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/OrderShipmentRequest} obj Optional instance to populate.
   * @return {module:Model/OrderShipmentRequest} The populated <code>OrderShipmentRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('order_address_id')) {
        obj['order_address_id'] = ApiClient.convertToType(data['order_address_id'], 'Number');
      }
      if (data.hasOwnProperty('tracking_number')) {
        obj['tracking_number'] = ApiClient.convertToType(data['tracking_number'], 'String');
      }
      if (data.hasOwnProperty('shipping_method')) {
        obj['shipping_method'] = ApiClient.convertToType(data['shipping_method'], 'String');
      }
      if (data.hasOwnProperty('shipping_provider')) {
        obj['shipping_provider'] = ApiClient.convertToType(data['shipping_provider'], 'String');
      }
      if (data.hasOwnProperty('tracking_carrier')) {
        obj['tracking_carrier'] = ApiClient.convertToType(data['tracking_carrier'], 'String');
      }
      if (data.hasOwnProperty('comments')) {
        obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
      }
      if (data.hasOwnProperty('items')) {
        obj['items'] = ApiClient.convertToType(data['items'], [ShipmentItem]);
      }
    }
    return obj;
  }

  /**
   * ID of the associated order address.
   * @member {Number} order_address_id
   */
  exports.prototype['order_address_id'] = undefined;
  /**
   * Tracking number of the shipment.
   * @member {String} tracking_number
   */
  exports.prototype['tracking_number'] = undefined;
  /**
   * Extra detail to describe the shipment, with values like: Standard, My Custom Shipping Method Name, etc. Can also be used for live quotes from some shipping providers.
   * @member {String} shipping_method
   */
  exports.prototype['shipping_method'] = undefined;
  /**
   * Enum of the BigCommerce shipping-carrier integration/module. (Note: This property should be included in a POST request to create a shipment object. If it is omitted from the request, the propertyâ€™s value will default to custom, and no tracking link will be generated in the email. To avoid this behavior, you can pass the property as an empty string.)
   * @member {String} shipping_provider
   */
  exports.prototype['shipping_provider'] = undefined;
  /**
   * Optional, but if you include it, its value must refer/map to the same carrier service as the `shipping_provider` value.
   * @member {String} tracking_carrier
   */
  exports.prototype['tracking_carrier'] = undefined;
  /**
   * Comments the shipper wishes to add.
   * @member {String} comments
   */
  exports.prototype['comments'] = undefined;
  /**
   * The items in the shipment.
   * @member {Array.<module:Model/ShipmentItem>} items
   */
  exports.prototype['items'] = undefined;



  return exports;
}));


