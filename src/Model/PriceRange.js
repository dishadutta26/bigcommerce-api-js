/**
 * Product Pricing API
 * API to provide marketing/display pricing for products, variants, and partially configured selections.
 *
 * OpenAPI spec version: master
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/TaxPrice'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TaxPrice'));
  } else {
    // Browser globals (root is window)
    if (!root.ProductPricingApi) {
      root.ProductPricingApi = {};
    }
    root.ProductPricingApi.PriceRange = factory(root.ProductPricingApi.ApiClient, root.ProductPricingApi.TaxPrice);
  }
}(this, function(ApiClient, TaxPrice) {
  'use strict';




  /**
   * The PriceRange model module.
   * @module Model/PriceRange
   * @version master
   */

  /**
   * Constructs a new <code>PriceRange</code>.
   * For estimated prices, the minimum/maximum price that will typically apply to this product
   * @alias module:Model/PriceRange
   * @class
   */
  var exports = function() {
    var _this = this;



  };

  /**
   * Constructs a <code>PriceRange</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/PriceRange} obj Optional instance to populate.
   * @return {module:Model/PriceRange} The populated <code>PriceRange</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('minimum')) {
        obj['minimum'] = TaxPrice.constructFromObject(data['minimum']);
      }
      if (data.hasOwnProperty('maximum')) {
        obj['maximum'] = TaxPrice.constructFromObject(data['maximum']);
      }
    }
    return obj;
  }

  /**
   * @member {module:Model/TaxPrice} minimum
   */
  exports.prototype['minimum'] = undefined;
  /**
   * @member {module:Model/TaxPrice} maximum
   */
  exports.prototype['maximum'] = undefined;



  return exports;
}));


