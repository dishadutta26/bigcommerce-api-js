/**
 * BigCommerce API
 * A Swagger Document for the BigCommmerce v3 Price Lists API.
 *
 * OpenAPI spec version: 3.0.0b
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/BulkPricingTier', 'Model/PriceRecordBase'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BulkPricingTier'), require('./PriceRecordBase'));
  } else {
    // Browser globals (root is window)
    if (!root.BigCommerceApi) {
      root.BigCommerceApi = {};
    }
    root.BigCommerceApi.PriceRecordBatchItem = factory(root.BigCommerceApi.ApiClient, root.BigCommerceApi.BulkPricingTier, root.BigCommerceApi.PriceRecordBase);
  }
}(this, function(ApiClient, BulkPricingTier, PriceRecordBase) {
  'use strict';




  /**
   * The PriceRecordBatchItem model module.
   * @module Model/PriceRecordBatchItem
   * @version 3.0.0b
   */

  /**
   * Constructs a new <code>PriceRecordBatchItem</code>.
   * &#x60;Price Record&#x60; object used in batch create or update. 
   * @alias module:Model/PriceRecordBatchItem
   * @class
   * @implements module:Model/PriceRecordBase
   */
  var exports = function() {
    var _this = this;

    PriceRecordBase.call(_this);



  };

  /**
   * Constructs a <code>PriceRecordBatchItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/PriceRecordBatchItem} obj Optional instance to populate.
   * @return {module:Model/PriceRecordBatchItem} The populated <code>PriceRecordBatchItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      PriceRecordBase.constructFromObject(data, obj);
      if (data.hasOwnProperty('variant_id')) {
        obj['variant_id'] = ApiClient.convertToType(data['variant_id'], 'Number');
      }
      if (data.hasOwnProperty('sku')) {
        obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
    }
    return obj;
  }

  /**
   * The variant with which this price set is associated. Either variant_id or sku is required. 
   * @member {Number} variant_id
   */
  exports.prototype['variant_id'] = undefined;
  /**
   * The sku for the variant with which this price set is associated.  Either sku or variant_id is required. 
   * @member {String} sku
   */
  exports.prototype['sku'] = undefined;
  /**
   * The 3-letter currency code with which this price set is associated. 
   * @member {String} currency
   */
  exports.prototype['currency'] = undefined;

  // Implement PriceRecordBase interface:
  /**
   * The list price for the variant mapped in a Price List. Overrides any existing or Catalog list price for the variant/product. 
   * @member {Number} price
   */
exports.prototype['price'] = undefined;

  /**
   * The sale price for the variant mapped in a Price List. Overrides any existing or Catalog sale price for the variant/product. If empty, the sale price will be treated as not being set on this variant. 
   * @member {Number} sale_price
   */
exports.prototype['sale_price'] = undefined;

  /**
   * The retail price for the variant mapped in a Price List. Overrides any existing or Catalog retail price for the variant/product.  If empty, the retail price will be treated as not being set on this variant. 
   * @member {Number} retail_price
   */
exports.prototype['retail_price'] = undefined;

  /**
   * The MAP (Manufacturer's Advertised Price) for the variant mapped in a Price List. Overrides any existing or Catalog MAP price for the variant/product. If empty, the MAP price will be treated as not being set on this variant. 
   * @member {Number} map_price
   */
exports.prototype['map_price'] = undefined;

  /**
   * @member {Array.<module:Model/BulkPricingTier>} bulk_pricing_tiers
   */
exports.prototype['bulk_pricing_tiers'] = undefined;

  /**
   * The SKU code associated with this `Price Record` if requested and it exists. 
   * @member {String} sku
   */
exports.prototype['sku'] = undefined;



  return exports;
}));


