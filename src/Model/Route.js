/**
 * Sites & Routes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.SitesRoutes) {
      root.SitesRoutes = {};
    }
    root.SitesRoutes.Route = factory(root.SitesRoutes.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Route model module.
   * @module Model/Route
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>Route</code>.
   * @alias module:Model/Route
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>Route</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/Route} obj Optional instance to populate.
   * @return {module:Model/Route} The populated <code>Route</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('matching')) {
        obj['matching'] = ApiClient.convertToType(data['matching'], 'String');
      }
      if (data.hasOwnProperty('route')) {
        obj['route'] = ApiClient.convertToType(data['route'], 'String');
      }
    }
    return obj;
  }

  /**
   * Unique ID for this route
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * What type of resource are we routing to?
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * (entity_id?) For a given type, which resources should match this route? e.g For a route with the type: \"product\" and matching: \"5\" this route would be used for the product with the ID of 5.  Depending on the type of resource, this may be an ID (matching a specific item), or a \"*\" wildcard matching all items of that type.
   * @member {String} matching
   */
  exports.prototype['matching'] = undefined;
  /**
   * The route template that will be used to generate the URL for the requested resource.  Supports several tokens:  - {id} The ID of the requested item - {slug} The slug for the requested item (if available). Note: the `slug` value may contain `/` slash - {language} The language string that the client is using
   * @member {String} route
   */
  exports.prototype['route'] = undefined;



  return exports;
}));


