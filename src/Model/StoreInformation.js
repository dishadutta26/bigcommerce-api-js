/**
 * Store Information APIs
 * The Store Information object, and Get Store Information endpoint, manage store profile settings.
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'Model/Logo', 'Model/StoreFeatures', 'Model/Timezone'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Logo'), require('./StoreFeatures'), require('./Timezone'));
  } else {
    // Browser globals (root is window)
    if (!root.StoreInformationApIs) {
      root.StoreInformationApIs = {};
    }
    root.StoreInformationApIs.StoreInformation = factory(root.StoreInformationApIs.ApiClient, root.StoreInformationApIs.Logo, root.StoreInformationApIs.StoreFeatures, root.StoreInformationApIs.Timezone);
  }
}(this, function(ApiClient, Logo, StoreFeatures, Timezone) {
  'use strict';




  /**
   * The StoreInformation model module.
   * @module Model/StoreInformation
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>StoreInformation</code>.
   * @alias module:Model/StoreInformation
   * @class
   */
  var exports = function() {
    var _this = this;


































  };

  /**
   * Constructs a <code>StoreInformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/StoreInformation} obj Optional instance to populate.
   * @return {module:Model/StoreInformation} The populated <code>StoreInformation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('domain')) {
        obj['domain'] = ApiClient.convertToType(data['domain'], 'String');
      }
      if (data.hasOwnProperty('secure_URL')) {
        obj['secure_URL'] = ApiClient.convertToType(data['secure_URL'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('first_name')) {
        obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
      }
      if (data.hasOwnProperty('last_name')) {
        obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
      }
      if (data.hasOwnProperty('address')) {
        obj['address'] = ApiClient.convertToType(data['address'], 'String');
      }
      if (data.hasOwnProperty('country')) {
        obj['country'] = ApiClient.convertToType(data['country'], 'String');
      }
      if (data.hasOwnProperty('country_code')) {
        obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
      }
      if (data.hasOwnProperty('phone')) {
        obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
      }
      if (data.hasOwnProperty('admin_email')) {
        obj['admin_email'] = ApiClient.convertToType(data['admin_email'], 'String');
      }
      if (data.hasOwnProperty('order_email')) {
        obj['order_email'] = ApiClient.convertToType(data['order_email'], 'String');
      }
      if (data.hasOwnProperty('favicon_url')) {
        obj['favicon_url'] = ApiClient.convertToType(data['favicon_url'], 'String');
      }
      if (data.hasOwnProperty('timezone')) {
        obj['timezone'] = Timezone.constructFromObject(data['timezone']);
      }
      if (data.hasOwnProperty('language')) {
        obj['language'] = ApiClient.convertToType(data['language'], 'String');
      }
      if (data.hasOwnProperty('currency')) {
        obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
      }
      if (data.hasOwnProperty('currency_symbol')) {
        obj['currency_symbol'] = ApiClient.convertToType(data['currency_symbol'], 'String');
      }
      if (data.hasOwnProperty('decimal_separator')) {
        obj['decimal_separator'] = ApiClient.convertToType(data['decimal_separator'], 'String');
      }
      if (data.hasOwnProperty('thousands_separator')) {
        obj['thousands_separator'] = ApiClient.convertToType(data['thousands_separator'], 'String');
      }
      if (data.hasOwnProperty('decimal_places')) {
        obj['decimal_places'] = ApiClient.convertToType(data['decimal_places'], 'Number');
      }
      if (data.hasOwnProperty('currency_symbol_location')) {
        obj['currency_symbol_location'] = ApiClient.convertToType(data['currency_symbol_location'], 'String');
      }
      if (data.hasOwnProperty('weight_units')) {
        obj['weight_units'] = ApiClient.convertToType(data['weight_units'], 'String');
      }
      if (data.hasOwnProperty('dimension_units')) {
        obj['dimension_units'] = ApiClient.convertToType(data['dimension_units'], 'String');
      }
      if (data.hasOwnProperty('dimension_decimal_places')) {
        obj['dimension_decimal_places'] = ApiClient.convertToType(data['dimension_decimal_places'], 'Number');
      }
      if (data.hasOwnProperty('dimension_decimal_token')) {
        obj['dimension_decimal_token'] = ApiClient.convertToType(data['dimension_decimal_token'], 'String');
      }
      if (data.hasOwnProperty('dimension_thousands_token:')) {
        obj['dimension_thousands_token:'] = ApiClient.convertToType(data['dimension_thousands_token:'], 'String');
      }
      if (data.hasOwnProperty('plan_name')) {
        obj['plan_name'] = ApiClient.convertToType(data['plan_name'], 'String');
      }
      if (data.hasOwnProperty('plan_level')) {
        obj['plan_level'] = ApiClient.convertToType(data['plan_level'], 'String');
      }
      if (data.hasOwnProperty('plan_is_trial')) {
        obj['plan_is_trial'] = ApiClient.convertToType(data['plan_is_trial'], 'Boolean');
      }
      if (data.hasOwnProperty('industry')) {
        obj['industry'] = ApiClient.convertToType(data['industry'], 'String');
      }
      if (data.hasOwnProperty('logo')) {
        obj['logo'] = Logo.constructFromObject(data['logo']);
      }
      if (data.hasOwnProperty('is_price_entered_with_tax')) {
        obj['is_price_entered_with_tax'] = ApiClient.convertToType(data['is_price_entered_with_tax'], 'Boolean');
      }
      if (data.hasOwnProperty('features')) {
        obj['features'] = StoreFeatures.constructFromObject(data['features']);
      }
    }
    return obj;
  }

  /**
   * Unique store identifier.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Primary domain name.
   * @member {String} domain
   */
  exports.prototype['domain'] = undefined;
  /**
   * Store’s current HTTPS URL.
   * @member {String} secure_URL
   */
  exports.prototype['secure_URL'] = undefined;
  /**
   * Store's name.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * Primary contact’s first name (as defined during the store sign-up process).
   * @member {String} first_name
   */
  exports.prototype['first_name'] = undefined;
  /**
   * Primary contact’s last name (as defined during the store sign-up process).
   * @member {String} last_name
   */
  exports.prototype['last_name'] = undefined;
  /**
   * Display address.
   * @member {String} address
   */
  exports.prototype['address'] = undefined;
  /**
   * Country where the store is located (as defined during the store sign-up process).
   * @member {String} country
   */
  exports.prototype['country'] = undefined;
  /**
   * Two character country code corresponding to country
   * @member {String} country_code
   */
  exports.prototype['country_code'] = undefined;
  /**
   * Display phone number.
   * @member {String} phone
   */
  exports.prototype['phone'] = undefined;
  /**
   * Email address of the store administrator/owner.
   * @member {String} admin_email
   */
  exports.prototype['admin_email'] = undefined;
  /**
   * Email address for orders and fulfillment.
   * @member {String} order_email
   */
  exports.prototype['order_email'] = undefined;
  /**
   * URL to the store's favicon
   * @member {String} favicon_url
   */
  exports.prototype['favicon_url'] = undefined;
  /**
   * @member {module:Model/Timezone} timezone
   */
  exports.prototype['timezone'] = undefined;
  /**
   * Default language code, as a two-character ISO 639-1 code.
   * @member {String} language
   */
  exports.prototype['language'] = undefined;
  /**
   * Default currency code
   * @member {String} currency
   */
  exports.prototype['currency'] = undefined;
  /**
   * Default symbol for values in the currency.
   * @member {String} currency_symbol
   */
  exports.prototype['currency_symbol'] = undefined;
  /**
   * Default decimal separator for values in the currency.
   * @member {String} decimal_separator
   */
  exports.prototype['decimal_separator'] = undefined;
  /**
   * Default thousands separator for values in the currency.
   * @member {String} thousands_separator
   */
  exports.prototype['thousands_separator'] = undefined;
  /**
   * Default decimal places for values in the currency.
   * @member {Number} decimal_places
   */
  exports.prototype['decimal_places'] = undefined;
  /**
   * Default position of the currency symbol (left or right).
   * @member {String} currency_symbol_location
   */
  exports.prototype['currency_symbol_location'] = undefined;
  /**
   * Default weight units (metric or imperial).
   * @member {String} weight_units
   */
  exports.prototype['weight_units'] = undefined;
  /**
   * Default dimension units (metric or imperial).
   * @member {String} dimension_units
   */
  exports.prototype['dimension_units'] = undefined;
  /**
   * The number of decimal places.
   * @member {Number} dimension_decimal_places
   */
  exports.prototype['dimension_decimal_places'] = undefined;
  /**
   * The symbol that separates the whole numbers from the decimal points.
   * @member {String} dimension_decimal_token
   */
  exports.prototype['dimension_decimal_token'] = undefined;
  /**
   * The symbol used to denote thousands.
   * @member {String} dimension_thousands_token:
   */
  exports.prototype['dimension_thousands_token:'] = undefined;
  /**
   * Name of the BigCommerce plan to which this store is subscribed.
   * @member {String} plan_name
   */
  exports.prototype['plan_name'] = undefined;
  /**
   * Level of the BigCommerce plan to which this store is subscribed.
   * @member {String} plan_level
   */
  exports.prototype['plan_level'] = undefined;
  /**
   * Whether the BigCommerce plan is a trial
   * @member {Boolean} plan_is_trial
   */
  exports.prototype['plan_is_trial'] = undefined;
  /**
   * Industry, or vertical category, in which the business operates. (As selected from drop-down list during the store sign-up process.)
   * @member {String} industry
   */
  exports.prototype['industry'] = undefined;
  /**
   * @member {module:Model/Logo} logo
   */
  exports.prototype['logo'] = undefined;
  /**
   * A Boolean value that indicates whether or not prices are entered with tax.
   * @member {Boolean} is_price_entered_with_tax
   */
  exports.prototype['is_price_entered_with_tax'] = undefined;
  /**
   * @member {module:Model/StoreFeatures} features
   */
  exports.prototype['features'] = undefined;



  return exports;
}));


