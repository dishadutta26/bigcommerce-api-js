/**
 * BigCommerce Widgets API
 * Widgets API allows developers to inject content into a BigCommerce theme.
 *
 * OpenAPI spec version: 
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.BigCommerceWidgetsApi) {
      root.BigCommerceWidgetsApi = {};
    }
    root.BigCommerceWidgetsApi.WidgetTemplate = factory(root.BigCommerceWidgetsApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The WidgetTemplate model module.
   * @module Model/WidgetTemplate
   * @version 1.0.0
   */

  /**
   * Constructs a new <code>WidgetTemplate</code>.
   * @alias module:Model/WidgetTemplate
   * @class
   */
  var exports = function() {
    var _this = this;








  };

  /**
   * Constructs a <code>WidgetTemplate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:Model/WidgetTemplate} obj Optional instance to populate.
   * @return {module:Model/WidgetTemplate} The populated <code>WidgetTemplate</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('uuid')) {
        obj['uuid'] = ApiClient.convertToType(data['uuid'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('kind')) {
        obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
      }
      if (data.hasOwnProperty('schema')) {
        obj['schema'] = ApiClient.convertToType(data['schema'], Object);
      }
      if (data.hasOwnProperty('template')) {
        obj['template'] = ApiClient.convertToType(data['template'], 'String');
      }
      if (data.hasOwnProperty('date_created')) {
        obj['date_created'] = ApiClient.convertToType(data['date_created'], 'String');
      }
      if (data.hasOwnProperty('date_modified')) {
        obj['date_modified'] = ApiClient.convertToType(data['date_modified'], 'String');
      }
    }
    return obj;
  }

  /**
   * The primary identifier.
   * @member {String} uuid
   */
  exports.prototype['uuid'] = undefined;
  /**
   * The user-friendly name.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * The kind of widget template.
   * @member {String} kind
   */
  exports.prototype['kind'] = undefined;
  /**
   * The JSON schema of data for this template. Used to validate a configuration.
   * @member {Object} schema
   */
  exports.prototype['schema'] = undefined;
  /**
   * The widget template HTML. Supports Handlebars and Paper helpers.
   * @member {String} template
   */
  exports.prototype['template'] = undefined;
  /**
   * The date on which this object was initially created.
   * @member {String} date_created
   */
  exports.prototype['date_created'] = undefined;
  /**
   * The date on which this object was last updated.
   * @member {String} date_modified
   */
  exports.prototype['date_modified'] = undefined;



  return exports;
}));


