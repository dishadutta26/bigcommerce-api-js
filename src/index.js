/**
 * BigCommerce API
 * A Swagger Document for the BigCommmerce v3 Catalog API.
 *
 * OpenAPI spec version: 3.0.0b
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['superagent-defaults', 'Apis', 'ApiClient', 'Model/Adjuster', 'Model/BaseError', 'Model/BrandBase', 'Model/BrandCollectionResponse', 'Model/BrandResponse', 'Model/BulkPricingRuleBase', 'Model/BulkPricingRuleCollectionResponse', 'Model/BulkPricingRuleResponse', 'Model/CatalogSummary', 'Model/CatalogSummaryResponse', 'Model/CategoryBase', 'Model/CategoryCollectionResponse', 'Model/CategoryNode', 'Model/CategoryResponse', 'Model/CategoryTreeCollectionResponse', 'Model/CollectionMeta', 'Model/ComplexRuleBase', 'Model/ComplexRuleCollectionResponse', 'Model/ComplexRuleConditionBase', 'Model/ComplexRuleResponse', 'Model/ConfigurableFieldBase', 'Model/ConfigurableFieldCollectionResponse', 'Model/ConfigurableFieldResponse', 'Model/CustomFieldBase', 'Model/CustomFieldCollectionResponse', 'Model/CustomFieldResponse', 'Model/CustomUrlBrand', 'Model/CustomUrlCategory', 'Model/CustomUrlProduct', 'Model/DetailedErrors', 'Model/ImageResponse', 'Model/Meta', 'Model/MetaFieldCollectionResponse', 'Model/MetafieldBase', 'Model/MetafieldResponse', 'Model/ModifierBase', 'Model/ModifierCollectionResponse', 'Model/ModifierResponse', 'Model/ModifierValueBaseAdjusters', 'Model/ModifierValueBaseAdjustersPurchasingDisabled', 'Model/ModifierValueCollectionResponse', 'Model/ModifierValueResponse', 'Model/NotFound', 'Model/OptionBase', 'Model/OptionCollectionResponse', 'Model/OptionConfig', 'Model/OptionResponse', 'Model/OptionValueBase', 'Model/OptionValueCollectionResponse', 'Model/OptionValueProductBase', 'Model/OptionValueResponse', 'Model/OptionValueVariantPost', 'Model/Pagination', 'Model/PaginationLinks', 'Model/ProductBase', 'Model/ProductCollectionResponse', 'Model/ProductImageBase', 'Model/ProductImageCollectionResponse', 'Model/ProductImageResponse', 'Model/ProductResponse', 'Model/ProductReviewBase', 'Model/ProductReviewCollectionResponse', 'Model/ProductReviewResponse', 'Model/ProductVideoBase', 'Model/ProductVideoCollectionResponse', 'Model/ProductVideoResponse', 'Model/ResourceImage', 'Model/VariantBase', 'Model/VariantCollectionResponse', 'Model/VariantResponse', 'Model/Brand', 'Model/BrandPost', 'Model/BrandPut', 'Model/BulkPricingRule', 'Model/BulkPricingRulePost', 'Model/Category', 'Model/CategoryPost', 'Model/CategoryPut', 'Model/ComplexRule', 'Model/ComplexRuleCondition', 'Model/ComplexRuleConditionPost', 'Model/ComplexRuleConditionPut', 'Model/ComplexRulePost', 'Model/ComplexRulePut', 'Model/ConfigurableField', 'Model/ConfigurableFieldPost', 'Model/CustomField', 'Model/CustomFieldPost', 'Model/ErrorResponse', 'Model/Metafield', 'Model/MetafieldPost', 'Model/MetafieldPut', 'Model/Modifier', 'Model/ModifierPost', 'Model/ModifierPut', 'Model/ModifierValueBase', 'Model/Option', 'Model/OptionPost', 'Model/OptionPut', 'Model/OptionValue', 'Model/OptionValuePost', 'Model/OptionValueProductPost', 'Model/OptionValuePut', 'Model/OptionValueVariant', 'Model/Product', 'Model/ProductImage', 'Model/ProductImagePost', 'Model/ProductImagePut', 'Model/ProductPost', 'Model/ProductPut', 'Model/ProductReview', 'Model/ProductReviewPost', 'Model/ProductReviewPut', 'Model/ProductVideo', 'Model/ProductVideoPost', 'Model/ProductVideoPut', 'Model/Variant', 'Model/VariantPost', 'Model/VariantProductPost', 'Model/VariantProductPut', 'Model/VariantPut', 'Model/BulkPricingRulePut', 'Model/ConfigurableFieldPut', 'Model/CustomFieldPut', 'Model/ModifierValue', 'Model/ModifierValuePost', 'Model/ModifierValuePut'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('superagent-defaults'), require('./Apis'), require('./ApiClient'), require('./Model/Adjuster'), require('./Model/BaseError'), require('./Model/BrandBase'), require('./Model/BrandCollectionResponse'), require('./Model/BrandResponse'), require('./Model/BulkPricingRuleBase'), require('./Model/BulkPricingRuleCollectionResponse'), require('./Model/BulkPricingRuleResponse'), require('./Model/CatalogSummary'), require('./Model/CatalogSummaryResponse'), require('./Model/CategoryBase'), require('./Model/CategoryCollectionResponse'), require('./Model/CategoryNode'), require('./Model/CategoryResponse'), require('./Model/CategoryTreeCollectionResponse'), require('./Model/CollectionMeta'), require('./Model/ComplexRuleBase'), require('./Model/ComplexRuleCollectionResponse'), require('./Model/ComplexRuleConditionBase'), require('./Model/ComplexRuleResponse'), require('./Model/ConfigurableFieldBase'), require('./Model/ConfigurableFieldCollectionResponse'), require('./Model/ConfigurableFieldResponse'), require('./Model/CustomFieldBase'), require('./Model/CustomFieldCollectionResponse'), require('./Model/CustomFieldResponse'), require('./Model/CustomUrlBrand'), require('./Model/CustomUrlCategory'), require('./Model/CustomUrlProduct'), require('./Model/DetailedErrors'), require('./Model/ImageResponse'), require('./Model/Meta'), require('./Model/MetaFieldCollectionResponse'), require('./Model/MetafieldBase'), require('./Model/MetafieldResponse'), require('./Model/ModifierBase'), require('./Model/ModifierCollectionResponse'), require('./Model/ModifierResponse'), require('./Model/ModifierValueBaseAdjusters'), require('./Model/ModifierValueBaseAdjustersPurchasingDisabled'), require('./Model/ModifierValueCollectionResponse'), require('./Model/ModifierValueResponse'), require('./Model/NotFound'), require('./Model/OptionBase'), require('./Model/OptionCollectionResponse'), require('./Model/OptionConfig'), require('./Model/OptionResponse'), require('./Model/OptionValueBase'), require('./Model/OptionValueCollectionResponse'), require('./Model/OptionValueProductBase'), require('./Model/OptionValueResponse'), require('./Model/OptionValueVariantPost'), require('./Model/Pagination'), require('./Model/PaginationLinks'), require('./Model/ProductBase'), require('./Model/ProductCollectionResponse'), require('./Model/ProductImageBase'), require('./Model/ProductImageCollectionResponse'), require('./Model/ProductImageResponse'), require('./Model/ProductResponse'), require('./Model/ProductReviewBase'), require('./Model/ProductReviewCollectionResponse'), require('./Model/ProductReviewResponse'), require('./Model/ProductVideoBase'), require('./Model/ProductVideoCollectionResponse'), require('./Model/ProductVideoResponse'), require('./Model/ResourceImage'), require('./Model/VariantBase'), require('./Model/VariantCollectionResponse'), require('./Model/VariantResponse'), require('./Model/Brand'), require('./Model/BrandPost'), require('./Model/BrandPut'), require('./Model/BulkPricingRule'), require('./Model/BulkPricingRulePost'), require('./Model/Category'), require('./Model/CategoryPost'), require('./Model/CategoryPut'), require('./Model/ComplexRule'), require('./Model/ComplexRuleCondition'), require('./Model/ComplexRuleConditionPost'), require('./Model/ComplexRuleConditionPut'), require('./Model/ComplexRulePost'), require('./Model/ComplexRulePut'), require('./Model/ConfigurableField'), require('./Model/ConfigurableFieldPost'), require('./Model/CustomField'), require('./Model/CustomFieldPost'), require('./Model/ErrorResponse'), require('./Model/Metafield'), require('./Model/MetafieldPost'), require('./Model/MetafieldPut'), require('./Model/Modifier'), require('./Model/ModifierPost'), require('./Model/ModifierPut'), require('./Model/ModifierValueBase'), require('./Model/Option'), require('./Model/OptionPost'), require('./Model/OptionPut'), require('./Model/OptionValue'), require('./Model/OptionValuePost'), require('./Model/OptionValueProductPost'), require('./Model/OptionValuePut'), require('./Model/OptionValueVariant'), require('./Model/Product'), require('./Model/ProductImage'), require('./Model/ProductImagePost'), require('./Model/ProductImagePut'), require('./Model/ProductPost'), require('./Model/ProductPut'), require('./Model/ProductReview'), require('./Model/ProductReviewPost'), require('./Model/ProductReviewPut'), require('./Model/ProductVideo'), require('./Model/ProductVideoPost'), require('./Model/ProductVideoPut'), require('./Model/Variant'), require('./Model/VariantPost'), require('./Model/VariantProductPost'), require('./Model/VariantProductPut'), require('./Model/VariantPut'), require('./Model/BulkPricingRulePut'), require('./Model/ConfigurableFieldPut'), require('./Model/CustomFieldPut'), require('./Model/ModifierValue'), require('./Model/ModifierValuePost'), require('./Model/ModifierValuePut'));
  }
}(function(superagent, Apis, ApiClient, Adjuster, BaseError, BrandBase, BrandCollectionResponse, BrandResponse, BulkPricingRuleBase, BulkPricingRuleCollectionResponse, BulkPricingRuleResponse, CatalogSummary, CatalogSummaryResponse, CategoryBase, CategoryCollectionResponse, CategoryNode, CategoryResponse, CategoryTreeCollectionResponse, CollectionMeta, ComplexRuleBase, ComplexRuleCollectionResponse, ComplexRuleConditionBase, ComplexRuleResponse, ConfigurableFieldBase, ConfigurableFieldCollectionResponse, ConfigurableFieldResponse, CustomFieldBase, CustomFieldCollectionResponse, CustomFieldResponse, CustomUrlBrand, CustomUrlCategory, CustomUrlProduct, DetailedErrors, ImageResponse, Meta, MetaFieldCollectionResponse, MetafieldBase, MetafieldResponse, ModifierBase, ModifierCollectionResponse, ModifierResponse, ModifierValueBaseAdjusters, ModifierValueBaseAdjustersPurchasingDisabled, ModifierValueCollectionResponse, ModifierValueResponse, NotFound, OptionBase, OptionCollectionResponse, OptionConfig, OptionResponse, OptionValueBase, OptionValueCollectionResponse, OptionValueProductBase, OptionValueResponse, OptionValueVariantPost, Pagination, PaginationLinks, ProductBase, ProductCollectionResponse, ProductImageBase, ProductImageCollectionResponse, ProductImageResponse, ProductResponse, ProductReviewBase, ProductReviewCollectionResponse, ProductReviewResponse, ProductVideoBase, ProductVideoCollectionResponse, ProductVideoResponse, ResourceImage, VariantBase, VariantCollectionResponse, VariantResponse, Brand, BrandPost, BrandPut, BulkPricingRule, BulkPricingRulePost, Category, CategoryPost, CategoryPut, ComplexRule, ComplexRuleCondition, ComplexRuleConditionPost, ComplexRuleConditionPut, ComplexRulePost, ComplexRulePut, ConfigurableField, ConfigurableFieldPost, CustomField, CustomFieldPost, ErrorResponse, Metafield, MetafieldPost, MetafieldPut, Modifier, ModifierPost, ModifierPut, ModifierValueBase, Option, OptionPost, OptionPut, OptionValue, OptionValuePost, OptionValueProductPost, OptionValuePut, OptionValueVariant, Product, ProductImage, ProductImagePost, ProductImagePut, ProductPost, ProductPut, ProductReview, ProductReviewPost, ProductReviewPut, ProductVideo, ProductVideoPost, ProductVideoPut, Variant, VariantPost, VariantProductPost, VariantProductPut, VariantPut, BulkPricingRulePut, ConfigurableFieldPut, CustomFieldPut, ModifierValue, ModifierValuePost, ModifierValuePut) {
  'use strict';

  /**
   * A_Swagger_Document_for_the_BigCommmerce_v3_Catalog_API_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var BigCommerceApi = require('index'); // See note below*.
   * var xxxSvc = new BigCommerceApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new BigCommerceApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new BigCommerceApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new BigCommerceApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 3.0.0b
   */
  var Models = {

    /**
     * BigCommerce Models
    */

    
    /**
     * The Adjuster model constructor.
     * @property {module:Model/Adjuster}
     */
    Adjuster: Adjuster,
    /**
     * The BaseError model constructor.
     * @property {module:Model/BaseError}
     */
    BaseError: BaseError,
    /**
     * The BrandBase model constructor.
     * @property {module:Model/BrandBase}
     */
    BrandBase: BrandBase,
    /**
     * The BrandCollectionResponse model constructor.
     * @property {module:Model/BrandCollectionResponse}
     */
    BrandCollectionResponse: BrandCollectionResponse,
    /**
     * The BrandResponse model constructor.
     * @property {module:Model/BrandResponse}
     */
    BrandResponse: BrandResponse,
    /**
     * The BulkPricingRuleBase model constructor.
     * @property {module:Model/BulkPricingRuleBase}
     */
    BulkPricingRuleBase: BulkPricingRuleBase,
    /**
     * The BulkPricingRuleCollectionResponse model constructor.
     * @property {module:Model/BulkPricingRuleCollectionResponse}
     */
    BulkPricingRuleCollectionResponse: BulkPricingRuleCollectionResponse,
    /**
     * The BulkPricingRuleResponse model constructor.
     * @property {module:Model/BulkPricingRuleResponse}
     */
    BulkPricingRuleResponse: BulkPricingRuleResponse,
    /**
     * The CatalogSummary model constructor.
     * @property {module:Model/CatalogSummary}
     */
    CatalogSummary: CatalogSummary,
    /**
     * The CatalogSummaryResponse model constructor.
     * @property {module:Model/CatalogSummaryResponse}
     */
    CatalogSummaryResponse: CatalogSummaryResponse,
    /**
     * The CategoryBase model constructor.
     * @property {module:Model/CategoryBase}
     */
    CategoryBase: CategoryBase,
    /**
     * The CategoryCollectionResponse model constructor.
     * @property {module:Model/CategoryCollectionResponse}
     */
    CategoryCollectionResponse: CategoryCollectionResponse,
    /**
     * The CategoryNode model constructor.
     * @property {module:Model/CategoryNode}
     */
    CategoryNode: CategoryNode,
    /**
     * The CategoryResponse model constructor.
     * @property {module:Model/CategoryResponse}
     */
    CategoryResponse: CategoryResponse,
    /**
     * The CategoryTreeCollectionResponse model constructor.
     * @property {module:Model/CategoryTreeCollectionResponse}
     */
    CategoryTreeCollectionResponse: CategoryTreeCollectionResponse,
    /**
     * The CollectionMeta model constructor.
     * @property {module:Model/CollectionMeta}
     */
    CollectionMeta: CollectionMeta,
    /**
     * The ComplexRuleBase model constructor.
     * @property {module:Model/ComplexRuleBase}
     */
    ComplexRuleBase: ComplexRuleBase,
    /**
     * The ComplexRuleCollectionResponse model constructor.
     * @property {module:Model/ComplexRuleCollectionResponse}
     */
    ComplexRuleCollectionResponse: ComplexRuleCollectionResponse,
    /**
     * The ComplexRuleConditionBase model constructor.
     * @property {module:Model/ComplexRuleConditionBase}
     */
    ComplexRuleConditionBase: ComplexRuleConditionBase,
    /**
     * The ComplexRuleResponse model constructor.
     * @property {module:Model/ComplexRuleResponse}
     */
    ComplexRuleResponse: ComplexRuleResponse,
    /**
     * The ConfigurableFieldBase model constructor.
     * @property {module:Model/ConfigurableFieldBase}
     */
    ConfigurableFieldBase: ConfigurableFieldBase,
    /**
     * The ConfigurableFieldCollectionResponse model constructor.
     * @property {module:Model/ConfigurableFieldCollectionResponse}
     */
    ConfigurableFieldCollectionResponse: ConfigurableFieldCollectionResponse,
    /**
     * The ConfigurableFieldResponse model constructor.
     * @property {module:Model/ConfigurableFieldResponse}
     */
    ConfigurableFieldResponse: ConfigurableFieldResponse,
    /**
     * The CustomFieldBase model constructor.
     * @property {module:Model/CustomFieldBase}
     */
    CustomFieldBase: CustomFieldBase,
    /**
     * The CustomFieldCollectionResponse model constructor.
     * @property {module:Model/CustomFieldCollectionResponse}
     */
    CustomFieldCollectionResponse: CustomFieldCollectionResponse,
    /**
     * The CustomFieldResponse model constructor.
     * @property {module:Model/CustomFieldResponse}
     */
    CustomFieldResponse: CustomFieldResponse,
    /**
     * The CustomUrlBrand model constructor.
     * @property {module:Model/CustomUrlBrand}
     */
    CustomUrlBrand: CustomUrlBrand,
    /**
     * The CustomUrlCategory model constructor.
     * @property {module:Model/CustomUrlCategory}
     */
    CustomUrlCategory: CustomUrlCategory,
    /**
     * The CustomUrlProduct model constructor.
     * @property {module:Model/CustomUrlProduct}
     */
    CustomUrlProduct: CustomUrlProduct,
    /**
     * The DetailedErrors model constructor.
     * @property {module:Model/DetailedErrors}
     */
    DetailedErrors: DetailedErrors,
    /**
     * The ImageResponse model constructor.
     * @property {module:Model/ImageResponse}
     */
    ImageResponse: ImageResponse,
    /**
     * The Meta model constructor.
     * @property {module:Model/Meta}
     */
    Meta: Meta,
    /**
     * The MetaFieldCollectionResponse model constructor.
     * @property {module:Model/MetaFieldCollectionResponse}
     */
    MetaFieldCollectionResponse: MetaFieldCollectionResponse,
    /**
     * The MetafieldBase model constructor.
     * @property {module:Model/MetafieldBase}
     */
    MetafieldBase: MetafieldBase,
    /**
     * The MetafieldResponse model constructor.
     * @property {module:Model/MetafieldResponse}
     */
    MetafieldResponse: MetafieldResponse,
    /**
     * The ModifierBase model constructor.
     * @property {module:Model/ModifierBase}
     */
    ModifierBase: ModifierBase,
    /**
     * The ModifierCollectionResponse model constructor.
     * @property {module:Model/ModifierCollectionResponse}
     */
    ModifierCollectionResponse: ModifierCollectionResponse,
    /**
     * The ModifierResponse model constructor.
     * @property {module:Model/ModifierResponse}
     */
    ModifierResponse: ModifierResponse,
    /**
     * The ModifierValueBaseAdjusters model constructor.
     * @property {module:Model/ModifierValueBaseAdjusters}
     */
    ModifierValueBaseAdjusters: ModifierValueBaseAdjusters,
    /**
     * The ModifierValueBaseAdjustersPurchasingDisabled model constructor.
     * @property {module:Model/ModifierValueBaseAdjustersPurchasingDisabled}
     */
    ModifierValueBaseAdjustersPurchasingDisabled: ModifierValueBaseAdjustersPurchasingDisabled,
    /**
     * The ModifierValueCollectionResponse model constructor.
     * @property {module:Model/ModifierValueCollectionResponse}
     */
    ModifierValueCollectionResponse: ModifierValueCollectionResponse,
    /**
     * The ModifierValueResponse model constructor.
     * @property {module:Model/ModifierValueResponse}
     */
    ModifierValueResponse: ModifierValueResponse,
    /**
     * The NotFound model constructor.
     * @property {module:Model/NotFound}
     */
    NotFound: NotFound,
    /**
     * The OptionBase model constructor.
     * @property {module:Model/OptionBase}
     */
    OptionBase: OptionBase,
    /**
     * The OptionCollectionResponse model constructor.
     * @property {module:Model/OptionCollectionResponse}
     */
    OptionCollectionResponse: OptionCollectionResponse,
    /**
     * The OptionConfig model constructor.
     * @property {module:Model/OptionConfig}
     */
    OptionConfig: OptionConfig,
    /**
     * The OptionResponse model constructor.
     * @property {module:Model/OptionResponse}
     */
    OptionResponse: OptionResponse,
    /**
     * The OptionValueBase model constructor.
     * @property {module:Model/OptionValueBase}
     */
    OptionValueBase: OptionValueBase,
    /**
     * The OptionValueCollectionResponse model constructor.
     * @property {module:Model/OptionValueCollectionResponse}
     */
    OptionValueCollectionResponse: OptionValueCollectionResponse,
    /**
     * The OptionValueProductBase model constructor.
     * @property {module:Model/OptionValueProductBase}
     */
    OptionValueProductBase: OptionValueProductBase,
    /**
     * The OptionValueResponse model constructor.
     * @property {module:Model/OptionValueResponse}
     */
    OptionValueResponse: OptionValueResponse,
    /**
     * The OptionValueVariantPost model constructor.
     * @property {module:Model/OptionValueVariantPost}
     */
    OptionValueVariantPost: OptionValueVariantPost,
    /**
     * The Pagination model constructor.
     * @property {module:Model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The PaginationLinks model constructor.
     * @property {module:Model/PaginationLinks}
     */
    PaginationLinks: PaginationLinks,
    /**
     * The ProductBase model constructor.
     * @property {module:Model/ProductBase}
     */
    ProductBase: ProductBase,
    /**
     * The ProductCollectionResponse model constructor.
     * @property {module:Model/ProductCollectionResponse}
     */
    ProductCollectionResponse: ProductCollectionResponse,
    /**
     * The ProductImageBase model constructor.
     * @property {module:Model/ProductImageBase}
     */
    ProductImageBase: ProductImageBase,
    /**
     * The ProductImageCollectionResponse model constructor.
     * @property {module:Model/ProductImageCollectionResponse}
     */
    ProductImageCollectionResponse: ProductImageCollectionResponse,
    /**
     * The ProductImageResponse model constructor.
     * @property {module:Model/ProductImageResponse}
     */
    ProductImageResponse: ProductImageResponse,
    /**
     * The ProductResponse model constructor.
     * @property {module:Model/ProductResponse}
     */
    ProductResponse: ProductResponse,
    /**
     * The ProductReviewBase model constructor.
     * @property {module:Model/ProductReviewBase}
     */
    ProductReviewBase: ProductReviewBase,
    /**
     * The ProductReviewCollectionResponse model constructor.
     * @property {module:Model/ProductReviewCollectionResponse}
     */
    ProductReviewCollectionResponse: ProductReviewCollectionResponse,
    /**
     * The ProductReviewResponse model constructor.
     * @property {module:Model/ProductReviewResponse}
     */
    ProductReviewResponse: ProductReviewResponse,
    /**
     * The ProductVideoBase model constructor.
     * @property {module:Model/ProductVideoBase}
     */
    ProductVideoBase: ProductVideoBase,
    /**
     * The ProductVideoCollectionResponse model constructor.
     * @property {module:Model/ProductVideoCollectionResponse}
     */
    ProductVideoCollectionResponse: ProductVideoCollectionResponse,
    /**
     * The ProductVideoResponse model constructor.
     * @property {module:Model/ProductVideoResponse}
     */
    ProductVideoResponse: ProductVideoResponse,
    /**
     * The ResourceImage model constructor.
     * @property {module:Model/ResourceImage}
     */
    ResourceImage: ResourceImage,
    /**
     * The VariantBase model constructor.
     * @property {module:Model/VariantBase}
     */
    VariantBase: VariantBase,
    /**
     * The VariantCollectionResponse model constructor.
     * @property {module:Model/VariantCollectionResponse}
     */
    VariantCollectionResponse: VariantCollectionResponse,
    /**
     * The VariantResponse model constructor.
     * @property {module:Model/VariantResponse}
     */
    VariantResponse: VariantResponse,
    /**
     * The Brand model constructor.
     * @property {module:Model/Brand}
     */
    Brand: Brand,
    /**
     * The BrandPost model constructor.
     * @property {module:Model/BrandPost}
     */
    BrandPost: BrandPost,
    /**
     * The BrandPut model constructor.
     * @property {module:Model/BrandPut}
     */
    BrandPut: BrandPut,
    /**
     * The BulkPricingRule model constructor.
     * @property {module:Model/BulkPricingRule}
     */
    BulkPricingRule: BulkPricingRule,
    /**
     * The BulkPricingRulePost model constructor.
     * @property {module:Model/BulkPricingRulePost}
     */
    BulkPricingRulePost: BulkPricingRulePost,
    /**
     * The Category model constructor.
     * @property {module:Model/Category}
     */
    Category: Category,
    /**
     * The CategoryPost model constructor.
     * @property {module:Model/CategoryPost}
     */
    CategoryPost: CategoryPost,
    /**
     * The CategoryPut model constructor.
     * @property {module:Model/CategoryPut}
     */
    CategoryPut: CategoryPut,
    /**
     * The ComplexRule model constructor.
     * @property {module:Model/ComplexRule}
     */
    ComplexRule: ComplexRule,
    /**
     * The ComplexRuleCondition model constructor.
     * @property {module:Model/ComplexRuleCondition}
     */
    ComplexRuleCondition: ComplexRuleCondition,
    /**
     * The ComplexRuleConditionPost model constructor.
     * @property {module:Model/ComplexRuleConditionPost}
     */
    ComplexRuleConditionPost: ComplexRuleConditionPost,
    /**
     * The ComplexRuleConditionPut model constructor.
     * @property {module:Model/ComplexRuleConditionPut}
     */
    ComplexRuleConditionPut: ComplexRuleConditionPut,
    /**
     * The ComplexRulePost model constructor.
     * @property {module:Model/ComplexRulePost}
     */
    ComplexRulePost: ComplexRulePost,
    /**
     * The ComplexRulePut model constructor.
     * @property {module:Model/ComplexRulePut}
     */
    ComplexRulePut: ComplexRulePut,
    /**
     * The ConfigurableField model constructor.
     * @property {module:Model/ConfigurableField}
     */
    ConfigurableField: ConfigurableField,
    /**
     * The ConfigurableFieldPost model constructor.
     * @property {module:Model/ConfigurableFieldPost}
     */
    ConfigurableFieldPost: ConfigurableFieldPost,
    /**
     * The CustomField model constructor.
     * @property {module:Model/CustomField}
     */
    CustomField: CustomField,
    /**
     * The CustomFieldPost model constructor.
     * @property {module:Model/CustomFieldPost}
     */
    CustomFieldPost: CustomFieldPost,
    /**
     * The ErrorResponse model constructor.
     * @property {module:Model/ErrorResponse}
     */
    ErrorResponse: ErrorResponse,
    /**
     * The Metafield model constructor.
     * @property {module:Model/Metafield}
     */
    Metafield: Metafield,
    /**
     * The MetafieldPost model constructor.
     * @property {module:Model/MetafieldPost}
     */
    MetafieldPost: MetafieldPost,
    /**
     * The MetafieldPut model constructor.
     * @property {module:Model/MetafieldPut}
     */
    MetafieldPut: MetafieldPut,
    /**
     * The Modifier model constructor.
     * @property {module:Model/Modifier}
     */
    Modifier: Modifier,
    /**
     * The ModifierPost model constructor.
     * @property {module:Model/ModifierPost}
     */
    ModifierPost: ModifierPost,
    /**
     * The ModifierPut model constructor.
     * @property {module:Model/ModifierPut}
     */
    ModifierPut: ModifierPut,
    /**
     * The ModifierValueBase model constructor.
     * @property {module:Model/ModifierValueBase}
     */
    ModifierValueBase: ModifierValueBase,
    /**
     * The Option model constructor.
     * @property {module:Model/Option}
     */
    Option: Option,
    /**
     * The OptionPost model constructor.
     * @property {module:Model/OptionPost}
     */
    OptionPost: OptionPost,
    /**
     * The OptionPut model constructor.
     * @property {module:Model/OptionPut}
     */
    OptionPut: OptionPut,
    /**
     * The OptionValue model constructor.
     * @property {module:Model/OptionValue}
     */
    OptionValue: OptionValue,
    /**
     * The OptionValuePost model constructor.
     * @property {module:Model/OptionValuePost}
     */
    OptionValuePost: OptionValuePost,
    /**
     * The OptionValueProductPost model constructor.
     * @property {module:Model/OptionValueProductPost}
     */
    OptionValueProductPost: OptionValueProductPost,
    /**
     * The OptionValuePut model constructor.
     * @property {module:Model/OptionValuePut}
     */
    OptionValuePut: OptionValuePut,
    /**
     * The OptionValueVariant model constructor.
     * @property {module:Model/OptionValueVariant}
     */
    OptionValueVariant: OptionValueVariant,
    /**
     * The Product model constructor.
     * @property {module:Model/Product}
     */
    Product: Product,
    /**
     * The ProductImage model constructor.
     * @property {module:Model/ProductImage}
     */
    ProductImage: ProductImage,
    /**
     * The ProductImagePost model constructor.
     * @property {module:Model/ProductImagePost}
     */
    ProductImagePost: ProductImagePost,
    /**
     * The ProductImagePut model constructor.
     * @property {module:Model/ProductImagePut}
     */
    ProductImagePut: ProductImagePut,
    /**
     * The ProductPost model constructor.
     * @property {module:Model/ProductPost}
     */
    ProductPost: ProductPost,
    /**
     * The ProductPut model constructor.
     * @property {module:Model/ProductPut}
     */
    ProductPut: ProductPut,
    /**
     * The ProductReview model constructor.
     * @property {module:Model/ProductReview}
     */
    ProductReview: ProductReview,
    /**
     * The ProductReviewPost model constructor.
     * @property {module:Model/ProductReviewPost}
     */
    ProductReviewPost: ProductReviewPost,
    /**
     * The ProductReviewPut model constructor.
     * @property {module:Model/ProductReviewPut}
     */
    ProductReviewPut: ProductReviewPut,
    /**
     * The ProductVideo model constructor.
     * @property {module:Model/ProductVideo}
     */
    ProductVideo: ProductVideo,
    /**
     * The ProductVideoPost model constructor.
     * @property {module:Model/ProductVideoPost}
     */
    ProductVideoPost: ProductVideoPost,
    /**
     * The ProductVideoPut model constructor.
     * @property {module:Model/ProductVideoPut}
     */
    ProductVideoPut: ProductVideoPut,
    /**
     * The Variant model constructor.
     * @property {module:Model/Variant}
     */
    Variant: Variant,
    /**
     * The VariantPost model constructor.
     * @property {module:Model/VariantPost}
     */
    VariantPost: VariantPost,
    /**
     * The VariantProductPost model constructor.
     * @property {module:Model/VariantProductPost}
     */
    VariantProductPost: VariantProductPost,
    /**
     * The VariantProductPut model constructor.
     * @property {module:Model/VariantProductPut}
     */
    VariantProductPut: VariantProductPut,
    /**
     * The VariantPut model constructor.
     * @property {module:Model/VariantPut}
     */
    VariantPut: VariantPut,
    /**
     * The BulkPricingRulePut model constructor.
     * @property {module:Model/BulkPricingRulePut}
     */
    BulkPricingRulePut: BulkPricingRulePut,
    /**
     * The ConfigurableFieldPut model constructor.
     * @property {module:Model/ConfigurableFieldPut}
     */
    ConfigurableFieldPut: ConfigurableFieldPut,
    /**
     * The CustomFieldPut model constructor.
     * @property {module:Model/CustomFieldPut}
     */
    CustomFieldPut: CustomFieldPut,
    /**
     * The ModifierValue model constructor.
     * @property {module:Model/ModifierValue}
     */
    ModifierValue: ModifierValue,
    /**
     * The ModifierValuePost model constructor.
     * @property {module:Model/ModifierValuePost}
     */
    ModifierValuePost: ModifierValuePost,
    /**
     * The ModifierValuePut model constructor.
     * @property {module:Model/ModifierValuePut}
     */
    ModifierValuePut: ModifierValuePut,
  };

	var exports = function(config) {
		var apis = {};
		for (var name in Apis) {
  		var client = new ApiClient(config);
      if (name === 'StoreInfoApi' || name === 'OrdersApi') {
        client.version = 'v2';
      }
			apis[name] = new Apis[name](client);
		}

		return apis;
	};

	exports.Models = Models;
	exports.Apis = Apis;
	exports.Client = ApiClient;

  return exports;
}));
